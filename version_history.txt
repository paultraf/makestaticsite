##########################################################################
#
# MakeStaticSite --- a shell script to create and deploy static websites 
# Copyright 2022-2025 Paul Trafford <pt@ptworld.net>
#
# version_history.txt - version history (or changelog) for MakeStaticSite
# This file is part of MakeStaticSite.
#
# MakeStaticSite is free software: you can redistribute it and/or modify 
# it under the terms of the GNU Affero General Public License as published 
# by the Free Software Foundation, either version 3 of the License, or 
# (at your option) any later version. MakeStaticSite is distributed in the 
# hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
# See the GNU Affero General Public License for more details.
# You should have received a copy of the GNU General Public License along 
# with MakeStaticSite. If not, see <https://www.gnu.org/licenses/>.
#
##########################################################################


0.31.8 (released on 2025-07-03)
     * Performance enhancements and refinements. *
      [lib/constants.sh]
       Added switch constant, wget_url_candidates_optimisation.
       Some cosmetic re-ordering; created new subsection for Wget-related
       phase 3 and subsequent processing. 
      [lib/general.sh]
       Added function arraydiff() to compute the difference between two
       arrays, using awk.
      [lib/mod_wayback.sh]
       wayback_url_paths(): 
       Introduced variable url_timeless_nodomain_slash to be analogous with 
       url_timeless_slash, keeping url_timeless_nodomain analogous with
       url_timeless.
       process_asset_anchors(): Bug fix: definition of url_stem_timeless
       (and url_stem_timeless_nodomain1 and url_stem_timeless_nodomain2) for
       link conversion of absolute URLs with paths changed from shell
       parameter expansion to sed substitution.
       Escaped sed delimiter (pipe) when building
       webpaths_output array, so that members containing pipe can be used
       safely in sed expressions.
      [makestaticsite.sh]
       main(): replaced conditional call to cut_mss_dirs() by a simple call
       to site_layout for site layout and mapping.
       initialise_variables(): Setting offline_file_system=windows duly sets
       the Wget option --restrict-file-names=windows.
       Moved sitemap creation routine to new function, sitemap_creation(),
       with work carried out explicitly in sitemap_dir.
       New function site_layout(), specify condtional calls to cut_mss_dirs()
       and sitemap_creation().
       New function generate_file_candidates() to optimise how the list of URL
       candidates is generated by using a temporary working directory with a
       minimal set of symlinked web pages yet to be processed for candidates.
       Array differences are computed between what's available and what has
       already been used in grep searches, as maintained in array,
       file_candidates0, to ensure that web source files are only used once.
       wget_extra_urls(): made file candidate optimisation optional and moved
       processing to generate_file_candidates(). Grep searches carried out
       on Wget download folders or temporary working directing depending on
       value of wget_url_candidates_optimisation.
       Added a routine to remove excessively long candidate URLs from
       webassets_all.
       Some minor refactoring around the filtering of Wayback URLs and web
       pages in general.
       
0.31.7 (released on 2025-05-14)
     * Extended support for assets with query strings, Wayback refinements. *
      [lib/constants.sh]: Changed default value of prune_query_strings to yes.
       Added constant, query_prune_always_list, for the removal of query
       strings for certain asset types irrespective of the value of
       prune_query_strings.
      [lib/mod_wayback.sh]
       wayback_filter_domains(): Allow assets to have query strings appended.
       process_asset_anchors(): Added a replacement based on a search pattern
       that strips .html extension from asset path for the links to web pages
       served without a trailing slash (and not appended with one by Wget's
       --convert-links option). Added another replacement for imported assets
       based on a search pattern on absolute URLs as far as second (original
       host) protocol, replacing it with path prefix.
      [makestaticsite.sh]
       generate_extra_domains(): Ensure that page_element_domains filters out
       precisely the host domain (and not subdomains).
       wget_extra_urls(): Added left parenthesis to list of characters
       to be trimmed if they precede a URL.
       Removed condition on prune_query_strings to enable
       download of assets with query strings (which can be pruned later).
       site_postprocessing(): Modified pruning of asset files with query
       strings to prevent any existing files without a query string from being
       overwritten.
       Added a routine to prune URLs in input_file_extra_all, file names and
       links - depending on the value of prune_query_strings; furthermore,
       prune all links to asset URLs/files if the extension is listed in
       query_prune_always_list, mainly because Chrome and other browsers will
       not process file:// links to, e.g., CSS unless they end in .css.
       Extended scope of pruning to all downloaded assets.
       
0.31.6 (released on 2025-04-29)
     * Extended support for Wayback Machine sites that span subdomains. *
      [lib/constants.sh]
       Added constant wget_wayback_max_redirects for the maximum number of
       redirects allowed for the Wayback Machine and set to 3 instead of 1
       that was previously hard-coded.
       Redefined wayback_search_regex as extended regular expression to
       support use of alternation between href and src.
       Removed the anchors from definition of url_re to support greps.
      [lib/general.sh]
       Added function sed_bre_unescape to unescape metacharacters escaped in
       basic regular expressions, allowing use as extended regular expressions.
       assets_search_string(): inserted \\ to properly escape double quotes.
      [lib/validate.sh]
       validate_url(): added anchors to url_re (following change to constant)
      [lib/mod_wayback.sh]
       process_wayback_url(): Define hostname_original_span, hostname variant
       that supports subdomain spanning, along with primaryhost_regex_span
       search pattern for Wayback link conversions.
       wayback_url_paths(): Ensure that url_path_original_regex, used in link
       replacements, doesn't have a trailing slash. Add definition of
       url_timeless_nodomain_ere as extended regular expression for use in
       grep.
       wayback_url_paths()
       wayback_augment_urls(): Added support for links via src attribute,
       using extended regular expressions.
       Added another candidate URL search pattern
       based on CSS background-image url property. 
       wayback_filter_domains(): Filter out candidate URLs that end with a
       pair of braces or parenthesis. Redefine url_regex in terms of
       hostname_original_span.
       wayback_wget_postprocess(): Added removal of URLs erroneously inserted
       in template code - before code render blocks - by Wget via href or src
       link conversion. Also replace space character entity number with an
       actual space.
       consolidate_assets(): replaced condition on hostname_original by one on 
       hostname_original_span to support subdomain matches in link conversion.
       process_asset_anchors(): Added a search pattern to match on trailing
       slashes when converting Wayback links to relative links for pages
       downloaded locally.
       process_asset_anchors(): In definition of url_stem_timeless_nodomain1
       and url_stem_timeless_nodomain2 change search pattern from generic    
       wayback_url_re to primaryhost_regex_span. url_stem_timeless now defined
       in terms of these, not calculated separately.
      [makestaticsite.sh]
       wget_extra_urls(): For Wayback URLs, add Memento absolute paths to
       url_grep_array and then prepend with Wayback host.
       Replace the http filter with one that filters out
       invalid URLs according to value of url_re.

0.31.5 (released on 2025-04-10)
     * Extended processing for Wayback Machine sites and batch file support. *
      [lib/constants.sh]
       Added option wget_span_subdomains to indicate whether or not Wget
       should span additional subdomains; and wget_span_subdomains_expr, a
       basic regular expression of allowed subdomain prefixes in addition to
       the primary domain itself.
      [lib/mod_wayback.sh]
       wayback_url_paths() and wayback_filter_domains() respectively: Ensure
       merge of http and https in url_timeless and url_regex applies when the
       origianal URL starts with http: or https:
       wayback_filter_domains(): Apply subdomain support in url_regex search
       pattern.
       process_asset_anchors(): Rewriting of links to absolute Wayback URLs
       extended to fully match corresponding downloaded assets via search
       pattern on arbitrary domains for url_timeless and url_stem_timeless
       replacements.
      [setup.sh]
       Fixed minor issues with printf and variables.
       read_config(): added -f <batch file> as an argument option.
       Added function setup_batch() to loop through supplied batch file and
       repeatedly call setup.sh, with URL validation for each line.
      [makestaticsite.sh]
       read_config(): added support for '-f' option with filename parameter;
       when supplied, call mss_batch().
       Added function mss_batch() to read and process batch_file, line by
       line; call makestaticsite.sh with this as -i parameter when it matches
       a valid configuration filename, and -u (unattended)
       A few cosmetic changes to echo statements.

0.31.4 (released on 2025-04-03)
     * Extended processing and maintenance for Wayback Machine sites. *
       Renamed variable names with 'domain' in them to 'hostname' where they
       can take both domain names and IP addresses as values.
       To be more consistent the Mozilla's MDN documentation: 
       https://developer.mozilla.org/en-US/docs/Web/API/Location
       wayback_restore_original_host renamed wayback_relative_links_clean
       and reworked its description to indicate options for original host and
       Wayback Machine host; wayback_host_original renamed
       wayback_host_original_dir. Added wayback_links_relative_rewrite to
       indicate how (non-Wayback) relative links are to be handled.
      [lib/constants.sh]
       Added option wget_extra_urls_depth to options_nodeps_load.
       Renamed wayback_domain_original to wayback_host_original, 
       wayback_domain_original_sitemap to wayback_host_original_sitemap, 
       wayback_anchors_original_domain to wayback_anchors_original_host,
       and host_dir to host_dir_mode.
      [lib/general.sh]
       hosts_toggle(): Replaced reference to $domain with $host.
      [lib/mod_wayback.sh]
       wayback_output_clean(): Restricted the search pattern for tags to
       prevent false superstring matches.
       Moved wayback_wget_postprocess() before consolidate_assets() to be
       consistent with temporal sequence.
       process_asset_anchors(): Rewriting relative links to identified assets
       increased in scope to allow for arbitrary domains.
       wayback_output_clean(): Removed any duplication in generation of
       webpages_clean array. Inserted routine to carry out restoration of 
       original host URLs, removing Wayback Machine prefixes, or, when
       retaining Wayback Machine URLs, to prefix absolute paths with
       Wayback Machine host, turning them into absolute URLs.
      [setup.sh].
       read_credentials(): Replaced reference to $domain with $hostname.
       read_option(): Replaced reference to $archived_domain_path with
       archived_host_path.
      [makestaticsite.sh]
       Replaced references to variable domain with hostname, domain_original
       with hostname_original, url_domain with url_hostname, and 
       wayback_domain_original_sitemap with wayback_host_original_sitemap.

0.31.3 (released on 2025-03-05)
     * Further refinements for Wayback sites, with extended postprocessing *
      [lib/constants.sh]
       Modified wayback_comments_re to be more generic as it can be included
       in various types of files, not just HTML documents.
      [lib/general.sh]
       regex_escape() and sed_rhs_escape(): Added pipe '|' to the BRE escape
       character list to facilitate sed replacements that use it as delimiter.
      [lib/mod_wayback.sh]
       process_asset_anchors(): For links to assets originally from external
       domains, remove primary domain from url_stem_timeless, used in sed
       search pattern.
       wayback_output_clean(): Extended support for tags that precede the
       Wayback code to be removed, allowing for any attributes.
       Extended scope of files for removal of Wayback code and comments to
       include filenames with query strings.
      [makestaticsite.sh]
       Fixed duplication of Wget core options for Wayback Machine URLs.
       Added a locking variable, working_mirror_lock, to prevent attempted
       move of a (now non-existent) directory in cut_mss_dirs().
       Refactored pruning of query strings, moved from wget_extra_urls() to
       site_postprocessing() immediately before routine to remove file name
       extensions added by Wget.
       process_assets(): Code tidy: removed and references to Wayback URLs
       as this is superfluous.

0.31.2 (released on 2025-02-11)
     * Further refinements, with extended postprocessing and checks on output
       for file names with illegal characters "
      [lib/constants.sh]
       Added constant offline_file_system to specify the target file system for
       offline output (viewing, etc.)
       Added constant windows_filename_illegal_chars, listing the characters
       that are invalid for use in file names in a Microsoft Windows file
       system.      
       Added constant static_webpage_file_extensions, listing common static
       web page file extensions, incorporating that in definition of
       webpage_file_extensions.
       Added option base_tags_remove to specify whether or not to remove
       <base> tags.
       Added tries constraint to wget_wayback_core_options constant.
      [lib/general.sh]
       Added function glob_escape() to apply backslash prefix to escape
       special characters used in globbing
       colorize(): Modified trap for case of undefined or dumb terminal. 
       print_progress(): Added trap for case of undefined or dumb terminal. 
      [makestaticsite.sh]
       Replaced post_get_site_checks() with mirror_checks(), with a call
       included in augment_mirror()
       initialise_variables(): Added read of static_webpage_file_extensions
       into html_file_exts array.
       mirror_checks(): Added checks on output for whether filename characters
       satisfy restrictions on Microsoft Windows with details sent to log and
       terminal.
       wget_extra_urls(): removed superfluous definition of column width.
       site_postprocessing(): Reworked the global search and replace across
       web pages, extending the scope of pages processed to those listed in
       html_file_exts and adding a routine to optionally remove <base> tags.
       
0.31.1 (released on 2025-01-16)
     * Maintenance, with fixes for basic limitations in functionality. *
      [lib/constants.sh]
       Definition of url_re extended to include all unreserved and reserved
       characters in URI definition, RFC 3986
      [makestaticsite.sh]
       initialise_variables(): added line to remove any query string when
       checking for web page file extension.
       process_assets(): only add non-empty entries to urls_array.

0.31 (released on 2025-01-13)
     * Consolidation, including bug fixes and performance enhancements. *
      [lib/mod_wayback.sh]
       Refinements of file/web paths to be processed for URL rewrites. 
       wayback_url_paths(): Modified definitions of url_path_original_dir and
       url_path_root to properly take account of different URL scenarios.
       consolidate_assets(): Replaced occurrences of url_path_original with 
       url_path_original_dir plus modifications of some conditional clauses
       to ensure correct scope of sed replacements.
       process_asset_anchors(): simplified a couple of labels.
      [makestaticsite.sh]
       Moved optional pruning based on prune_filename_extensions_querystrings
       from process_assets() to site_postprocessing()
       initialise_variables(): Modified definitions of url_path_dir to
       properly take account of different URL scenarios.
       initialise_mirror_archive_dir(): Added routine to check compatibility
       of supplied URL and existing archive directory.
       process_assets(): Reworked the generation of extra_dirs_list() to
       contain only the parent directories necessary for processing.
       Added division by zero trap when computing long filenames.
       clean_mirror(): corrected link tag canonical attribute rewrite.

0.30.13.2 (released on 2025-01-08)
          * Bug fix for removing superflous Web asset file extensions. *
           [lib/constants.sh]
            Added constant, prune_filename_extensions_querystrings, to
            indicate whether or not to prune (mainly CSS) filenames with
            query strings where Wget has appended a file extension.
           [makestaticsite.sh]
            Moved the optional pruning of filenames of Web assets with query
            strings, file extension from wget_extra_urls() to process_assets();
            added a routine to rename linked files using sed substitutions. 

0.30.13.1 (released on 2024-12-19)
          * Bug fix for processing assets for URLs with paths. *
           [makestaticsite.sh]
            process_assets(): Conditionally restored grep exclude clause in
            'find' pipeline for generating extra_dirs_list array.
           [README.md]
            Updated with information about WARC support.
            
0.30.13 (released on 2024-12-18)
        * WARC archives support, improved handling of URLs with paths. *
         [lib/constants.sh]
          Added constants: warc_output (yes/no) to enable WARC output;
          warc_name_format indicates the format for the WARC filename;
          warc_header_format specifies the format of the header for the
          WARC file as a whole; warc_cdx to write a content index;
          warc_compress (yes/no) to gzip the resulting WARC file.
          Removed --timestamping parameter from wget_mirror_options (will be
          added if archive=no).
         [lib/general.sh]
          Added function array_elements_delete() to delete a list of elements
          from an array (supplied via name).
          Added function wget_warc_entry() to add Wget WARC options.
         [lib/mod_wayback.sh]
          process_wayback_url(): Defined url_path_original_dir variable to
          store precisely the path to the directory containing the requested
          resource.
          consolidate_assets(): Generally replaced occurrences of url_path by
          url_path_dir and url_path_original by url_path_original_dir for
          move and copy operations.
          Added check to see if 'imports' directory in
          destination path already exists.
         [lib/validate.sh]
          validate_http(): removed superfluous terminal output
         [makestaticsite.sh]
          main(): Phase 3 now invoked by simple call to augment_mirror(), an
          additional function  to orchestrate additional runs of Wget and to
          include WARC concatenation, as appropriate.
          initialise_variables(): modified the handling of timestamps for
          MakeStaticSite archives, removing --timestamping option from Wget
          when archive=no.
          Added routine to generate WARC header parameters for Wget.
          wget_extra_urls(): Insert WARC options as Wget parameters, where
          applicable and remove --no-clobber from Wget options.
          Added routine to remove URLs from Wget candidate list that already
          have a corresponding file download.
          process_assets(): reworked handling of URLs with paths, based on
          url_paths_dir instead of url_paths to ensure proper handling of
          URLs containing paths to web pages with file extensions specified.
          Condition for non-processing of XML files made stricter.
          Added further constraint on moving files and directories to ensure
          that non-asset directories are not moved.

0.30.12 (released on 2024-11-20)
        * Wget-related maintenance; security check added on Wget version *
         [lib/constants.sh]
          Added constant mss_site for MakeStaticSite project URL;
          added constant option 'mss' to wget_user_agent, to denote
          MakeStaticSite as the Web crawler, based on Wget; changed constant
          option 'default' to 'wget'; made 'mss' default option.
          Added constants wget_version_secure_atleast (version containing the
          latest security patch) and wget_version_security_ref (corresponding
          reference).
         [makestaticsite.sh]
          initialise_variables(): Added line to generate composite user agent
          (MakeStaticSite and Wget) when option set to 'mss'.
          Reworked the checks on Wget version to also include a version check
          on security (wget_version_secure_atleast).

0.30.11 (released on 2024-11-06)
        * Further refinements for more accurate site mirroring. *
         [lib/constants.sh]
          Added constant wget_adjust_extensions to list extensions for assets
          (HTML, CSS) affected by the corresponding Wget option. Added css 
          to web_source_extensions list.
         [lib/validate.sh]
          validate_http(): brought forward the calculation of url_effective
          to help user decided whether or not to proceed with redirection.
          For the special case that url_effective just removes the trailing
          slash, keep url as is.
         [lib/mod_wayback.sh]
          consolidate_assets(): bug fixes: modified routine for moving items
          into imports directory of main trunk, preventing directories and
          files erroneously ending up in root directory; modified the
          determination of first and last snapshots.
         [lib/general.sh]
          stopclock(): Bug fix: reporting of hour reinstated after change from
          printf to echolog
         [makestaticsite.sh]
          initialise_variables(): bug fix: only display error message about
          the mirror not having a timestamp when start phase=3.
          wget_extra_urls(): added whitespace as a delimiter when pruning
          links to assets that have query strings appended.  Refined filtering
          of candidate asset URLs with query strings appended to take account
          of prune_query_strings setting.
          site_postprocessing(): reworked the escaping of protocol slashes
          and combined two sed commands into one.

0.30.10 (released on 2024-10-26)
        * Further refinements, with improved support for no host directory. *
         [lib/constants.sh]
          Added mss_cut_dirs to options_check_yesno and options_nodeps_load
          arrays; added constant wayback_code_tags to store a list of HTML
          document tags (in reverse depth order), removed opening tag from
          wayback_code_re.
         [lib/mod_wayback.sh]
          wayback_filter_domains(): renamed wayback_domain_exceptions to
          wayback_download_exceptions.
          wayback_output_clean(): extended the removal of JavaScript Playback
          code inserted by Wayback Machine to loop over wayback_code_tags.
         [setup.sh]
          read_config(): added support for '-q' option;
          conclude(): invoke makestaticsite.sh with '-q' option, if defined.
         [makestaticsite.sh]
          main(): Added call to cut_mss_dirs for Wayback URLs. After call to
          phase 4 (site postprocessing), ensure that if 'no host directory' is
          set, the working directories are set accordingly.
          initialise_variables(): Brought forward assignment of mss_cut_dirs;
          reworked assignment of url_robots and url_sitemap to take account
          of mss_cut_dirs. Reworked handling of 'no host directory' option
          to delay the effect by removing from Wget options, leaving it to
          phase 4 to apply separately.
          site_postprocessing(): added a routine (for use in scripts) to
          extend replacement of instances of domain with deploy_domain by
          escaping protocol slashes.  Apply host directory directive, moving
          web content up one level, as appropriate.
          Streamlined a few variable assignments. 
          clean_mirror(): simplified generation of sitemap.xml
          cut_mss_dirs(): reworked the move of the main mirror branch to
          properly take account of mss_cut_dirs; only attempt a directory
          move before further additions from an extras folder (phase 5).

0.30.9 (released on 2024-10-18)
       * System maintenance and extended validation and tidy options. *
        [lib/constants.sh]
         Added constant, wayback_code_toolbar_re, for static HTML block
         inserted by Wayback Machine.  Simplified wayback_code_re to
         match more liberally.
         Added constant wayback_merge_httphttps to support links to
         resources on original domain originally under both http and https.
         Loosened pattern matching in wayback_code_re.
         Added constants wayback_folders and wayback_folders_clean to
         support options to delete extra directories created by the Wayback
         Machine.
        [lib/mod_wayback.sh]
         wayback_url_paths():
         consolidate_assets(): Added support for mixed http and https
         snapshots for primary domain (depending on the value of
         wayback_merge_httphttps) with notices of status; in generating
         snapshot_path_list, only omit the url_path_snapshot_root directory
         (to allow http[s] variants).
         wayback_output_clean(): refined routine to ensure that mailto:
         links modified by the Wayback Machine are always restored; added 
         search and replace based on wayback_code_toolbar_re. Added option
         to tidy up downloaded Wayback Machine support code and styles.
        [lib/validate.sh]
         validate_url_range(): only call validate_http() when start phase
         will involve Wget requests to target host, i.e. less than 4.
        [makestaticsite.sh]
         initialise_mirror_archive_dir(): when creating a mirror, check if
         mirror directory already exists and automatically append a version
         (auto increments).
         initialise_variables(): Added check on Wayback mirror's principal
         timestamp matching the 'from' date in the URL supplied from the
         configuration file.

0.30.8 (released on 2024-10-03)
       * System maintenance and extended Wayback output options. *
        [lib/constants.sh]
         Set wget_user_agent=default.
         New constants: wayback_sitename_hosts, wayback_sitename_timestamps
         to configure the format of mirror and zipfile names;
         wayback_links_clean (yes/no) for removing Wayback host prefixes
         from URL links.
        [setup.sh]
         read_option(): for Wayback URLs, set host variable (and hence
         local_sitename to depend on the value of wayback_sitename_hosts.
        [makestaticsite.sh]
         initialise_include-excludes() renamed initialise_include_excludes()
         to conform to valid Bash names (hyphen is not a valid character).
         New function initialise_mirror_archive_dir() to generate
         mirror directory and zipfile names, called just once from
         initialise_variables().
         clean_mirror(): changed how the domain directory inside
         mirror_archive_dir is renamed, with error trap.
         cut_mss_dirs(): added error trap for 'mv' command.
        [lib/validate.sh]
         validate_http(): added check for HTTP response code 404 (file not
         found).
        [lib/mod_wayback.sh]
         Replaced calls to echo() by echolog().
         wayback_output_clean(): regenerated web pages in consolidated
         layout, stored in webpages_clean array.  Added routine to delete 
         occurrences of Wayback host URL prefix inserted by Wayback Machine
         depending on value of wayback_links_clean.

0.30.7 (released on 2024-09-26)
       * System refinements and maintenance *
        [makestaticsite.sh]
         Renamed echo() to echolog(), so no longer override built-in 'echo'
         command, and moved to lib/generals.sh; updated function calls.  
         Updated calls to cd() with cd_check(); and to cp() with cp_check()
         conclude(): replaced calls to printf() by echolog(), enabling logging
         of summary run information.
        [setup.sh]
         Updated calls to cd() with cd_check(); and to cp() with cp_check().
        [lib/constants.sh]
         Refined constant wget_user_agent to three types of values based on
         no agent, Wget, or user-defined.
        [lib/general.sh]
         echolog() function moved here; replaced calls to echo() by echolog().
         stopclock(): replaced calls to printf() by echolog(), enabling
         logging of clock timings.
         New function cd_check(), combining 'cd' command with error checking,
         including optional custom error messages.
         New function cp_check(), combining 'cp' command with error checking,
         including optional custom error messages.
        [lib/validate.sh]
         Replaced calls to echo() by echolog().
        [lib/mod_wayback.sh]
         Replaced calls to echo() by echolog().
        [README.md]
         Updated the 'About' section to include added support for Wayback
         Machine.

0.30.6 (released on 2024-09-24)
       * Further Wayback Machine support, including date ranges *
        [lib/constants.sh]
         New constants: url_grep_search_pattern, listing URL right-hand
         boundary characters; datetime_regex - 14-character regular expression
         to match standard date-time.
         Renamed variables wayback_date_from to wayback_date_from_earliest,
         and wayback_date_to to wayback_date_to_latest for clarity.
        [lib/general.sh]
         New function timestamp_readable() to convert a timestamp in
         YYYYMMDDhhmmss format to a more readable word-based format.
        [lib/validate.sh]
         New function validate_url_range() to validate a custom URL with
         'from' and 'to' dates, including a call to validate_http() based
         on the 'from' date, with support for redirection.
         check_wayback_url(): added routine to adjust URL when target site
         missing http protocol; added third function argument (name of URL
         variable) to support update variable assignment.
        [lib/mod_wayback.sh]
         Swapped roles of wayback_date_to and wayback_date_from.
         wmd_get_wayback_site(): wayback_date_from renamed as
         wmd_wayback_date_from, wayback_date_to renamed wmd_wayback_date_to. 
         Added function validate_wayback_dates() with expanded checks on
         user-submitted to/from dates, with error handling.
         validate_wayback_dates() simplified with from/to date calculations
         no longer required.
         wayback_augment_urls(): added percent encoding of whitespaces.
         process_wayback_url(): changed assignment of wayback_date_from_to
         to be based on date format rather than URL field position.
         initialise_wayback(): added further checks on date ranges.
         consolidate_assets(): added generation of summary Wayback output.
        [setup.sh]
         read_option(): Moved check for Wayback Machine before the printing
         to config file; added URL parameter to check_wayback_url() call.
         Refactored URL validation to accommodate URL date range check.
        [makestaticsite.sh]
         initialise_variables(): added URL parameter to check_wayback_url()
         call. Introduced URL date range validation.
         mirror_site(): Added support for passing date range parameters to
         Hartator's Wayback Machine Downloader.
         wget_extra_urls(): Incorporated Wayback URLs into extensions filter.
         Refinement to ensure the retainment of character
         entities in URLs (starting &#); added conversion of ISO 8859-1
         character entities in URLs input file to percent encoding.
         Added filter on date ranges (when wayback_timestamp_policy=range).
         conclude(): Added summary reporting for Wayback Machine URLs.

0.30.5 (released on 2024-09-12)
       * Extended Wget support for Wayback Machine, improved link processing *
        [lib/constants.sh]
         New constants: wget_wayback_core_options - for Wget runs in phase 3;
         wayback_newsfeed_clean - what to do with links to newsfeeds such as
         RSS ('no, to maintain as-is, linking to Wayback Machine host; 'yes'
         to restore the original link, otherwise convert to a relative link).
         New constant wayback_search_regex to support search for additional
         Wayback Machine URLs.
         Added new subsection 'Tidy up of Wayback Machine output' and moved
         respective constants there.
         wget_inputs_main renamed wget_inputs_main_stem, wget_inputs_extra
         renamed wget_inputs_extra_stem for greater clarity.
         wget_wayback_core_options set as empty pending further investigation
        [lib/general.sh]
         find_web_pages() renamed grep_web_pages() and ad hoc file extension
         pattern replaced by asset_grep_includes. 
         Added function find_web_pages() to find web pages within current
         directory
        [lib/validate.sh]
         validate_http(): added another parameter to allow for output to log
         only. Refined handling of Wayback Machine URLs, inserting a
         recommendation to update config file when encountering redirection.  
        [lib/mod_wayback.sh]
         Added function wayback_augment_urls() to generate additional
         candidate URLs based on href relative links.
         wayback_url_paths(): reworked to remove a bit of redundancy, with 
         more concise assignment of url_base_timeless.
         wayback_filter_domains(): in the generation of webassets_wayback0,
         added the case for page requisites based on a comparison with
         asset_extensions constant.
         consolidate_assets(): restructured directory layout for consistency
         with rest of system: distinguish local assets from those from
         external domains, which are placed in imports_directory; and assets
         from original domain moved out of the domain-specific folder created
         by the Wayback Machine. Copy operations and link conversions
         adjusted accordingly.
         process_assets(): bug fix: refined conversion of absolute URLs to
         relative URLs to properly take account of 'assets' and 'imports'
         directories.
        [makestaticsite.sh]
         initialise_variables(): inserted call to validate_http();
         updated variable names to wget_inputs_main_stem and
         wget_inputs_extra_stem.
         wget_extra_urls(): inserted call to wayback_augment_urls() to
         generate extra Wayback Machine candidate URLs; relaxed the
         condition for augmenting wget_extra_core_options with
         wget_wayback_core_options.
         site_postprocessing(): added a conditional on wayback_url that
         either calls process_assets() or the series of mod_wayback.sh
         functions, that was previously placed in process_assets().
         Added conversion of newsfeed links according to the value of
         wayback_newsfeed_clean.
         site_postprocessing(): changed call from find_web_pages() to
         grep_web_pages().

0.30.4 (released on 2024-08-30)
       * Maintenance: bug fixes in processing Wayback Machine output. *
        General replacement of 'env echo' with printf; some echo statements
        used solely for processing also replaced by printf.
        [lib/mod_wayback.sh]
         Code tidy to address most Shellcheck issues (others can be ignored
         because data doesn't contain spaces, asterisks, etc.).
         wayback_url_paths(): refined definition of url_path_snapshot_root to
         remove anything after last '/' (case URLs end with file extension).
         consolidate_assets(): added routine to move top-level directories
         created by Wget into the URL path.
         Moved the definition of webpaths_output2() here to ensure that it
         excludes the URL path directory before being used in file moves. 
         Bug fixes: modified parameters in 'find' command for -not -path
         parameters.
         process_asset_anchors(): modified sed substitution clauses to
         properly take account of full URL paths and hence enable correct
         relative links. 
         
0.30.3 (released on 2024-08-25)
       * Extended Wayback Machine crawls to URLs with arbitrary timestamps.
        [lib/constants.sh]
         New constants: webpage_file_extensions - a list of common web page
         file extensions; wayback_datetime_regex - regex for Wayback (Memento)
         datetime directory; wget_default_page - Wget -default-page option;
         wayback_snapshot_path_depth - the number of directories to traverse
         to get to the original domain directory (default based on Internet
         Archive).
        [lib/general.sh]
         find_web_pages() renamed grep_web_pages();
         new function find_web_pages() to simply find web pages within given
         directory subject to asset_find_names and asset_exclude_dirs.
         print_progress(): added trap for max_count to avoid division by zero
        [lib/mod_wayback.sh]
         process_wayback_url(): new variable, url_path_original, to ensure
         valid directory path corresponding to url_path.
         get_webassets_wayback() renamed to wayback_filter_snapshots().
         Added function wayback_url_paths() to define a few commonly used
         URL-related constants.
         Added function wayback_wget_postprocess() for postprocessing of Wget
         output, initially to insert Wayback Machine domain for relative links
         to the root directory. 
         Added function wayback_filter_domains() to apply filters on
         candidate Wayback URLs based on domains and paths, consistent with
         what has been downloaded so far; and to remove URLs originally served
         from external domains.
         Wget options inserted to further constrain ongoing crawls.
         consolidate_assets(): some refactoring of variable initialisation;
         added maxdepth flag to limit generation of snapshot_path_list array,
         removing somme redundant folders and files and improving performance.
         Overhauled the replacement of relative links created by Wget, taking
         account of links to content in same and different branches
         respectively.        
         process_asset_anchors(): overhauled to make coverage of relevant
         assets more complete, fixing issues in link conversion.
         Trimmed dest_path to ensure a valid path; inserted url_path_original
         into search pattern to support URLs with paths. 
         wayback_output_clean(): added error trap for awk statements.
         Removed superfluous output echoed to log file.
        [makestaticsite.sh]
         initialise_variables(): inserted call to wayback_url_paths().
         mirror_site(): appended call to wayback_wget_postprocess() for
         Wayback URLs.
         Ensured that a trailing '/' is not added to URLs that end in any
         extensions that are in webpage_file_extensions list; similarly,
         defined url_path_dir to ensure URL path directory is valid.
         wget_extra_urls(): inserted call to wayback_filter_domains() for
         special filtering of Wayback Machine URLs.
         Renamed webassets_nohtml to webassets_filter_html to make allowance
         for certain web pages remaining after filtering; in the generation
         of webassets_filter_html, exemption to filtering made for Wayback
         Machine URLs, already filtered.
         Appended call to wayback_wget_postprocess() for Wayback URLs.
         cut_mss_dirs(): Replaced occurrences of url_path with url_path_dir.
         process_assets(): adjusted asset_depth to be a function of
         url_path_depth, to ensure that asset_rel_path is cut accordingly.

0.30.2 (released on 2024-08-07)
       * Maintenance with improved performance for processing assets. *
        [lib/constants.sh]
         New constants: shorten_longlines - whether to enable line shortening
         to support asset processing; average_linelength_max - average line
         length as a criterion for line shortening; longest_linelength_max -
         longest line length as a criteron for line shortening; and
         newline_inserts - list of search and replace expressions, including
         newlines to reduce line lengths. 
        [lib/general.sh]
         url_percent_encode(): bug fix: use 'env echo' to prevent useless
         output to log file.
         New function longest_line() to compute a file's longest line and its
         length.
        [lib/mod_wayback.sh]
         consolidate_assets(): Changed sed character separator from '~' to
         '|' where URL expected as input; '|' is neither a reserved nor
         unreserved character in RFC 3986 so would need to be escaped if used
         in a URL (as %7C). Added progress bar.
         print_progress(): Added case for no parameters - to call itself with
         full-width bar, print newline and return.
         process_asset_anchors(): Added progress bar.
        [makestaticsite.sh]
         Streamlined calls to progress_bar on completion of progress bar.
         process_assets(): introduced routine to break apart long lines to
         reduce processing time for link conversion using sed.  When printing
         the progress bar, made sure to print the initial state of 0%.
        [README.md]
         Updated features and limitations, particularly to reference support
         for the Wayback Machine.  
         Added section 'First run' as a usage quickstart.

0.30.1 (released on 2024-08-02)
       * Maintenance: bug fixes to enhance support for Wayback Machine *
        [lib/constants.sh]
         Set prune_query_strings to 'yes' as default
        [lib/mod_wayback.sh]
         process_asset_anchors(): Copying of assets to inside the canonical
         path and the conversion of relative links now based on directories
         in snapshot_path_list, which itself is limited to directories in its
         determination by the 'find' command.
         Bug fix for internal links that support internal navigation.
        [lib/validate.sh]
         validate_http(): When a URL redirects, store the effective URL also
         when it's the Wayback Machine.

0.30 (released on 2024-07-30)
     * Native support for sites hosted on the Wayback Machine plus
       refinements that improve the incorporation of assets. *
      [lib/constants.sh]
       New constants: use_wayback_id (yes/no) - capture (natively) original
       page vs the Wayback Machine's processed version?
       wayback_mementos_only (yes/no) - only download assets that have Memento
       URLs?
       wayback_assets_mode - how to incorporate assets downloaded in phase 3;
       'off' to ignore them; 'original' to recreate original layout as far as
       possible (timestamps removed); 'timestamp' to leave and reference assets
       in Wayback Machine timestamped folders
       wayback_timestamp_policy - timestamp policy; 'exact' to only download
       and refer to assets with exact timestamp; 'any' to download assets with
       any date; 'range' to download subject to specified date range.
       wayback_anchors_original_domain (yes/no) - when partially capturing a
       site on the Wayback Machine, restore anchors (links) to original domain
       rather to archive on Wayback Machine?
       wayback_domain_original (yes/no) - restore original domain folder when
       generating a mirror of site archived by the Wayback Machine?
       wayback_domain_original_sitemap (yes/no) - restore original URLs in
       robots and sitemap files for site archived by the Wayback Machine?
       wayback_code_clean (yes/no) - delete (JavaScript) code inserted by
       Wayback Machine?
       wayback_code_re - regular expression match for code inserted by the
       Wayback Machine
       wayback_comments_clean (yes/no) - delete HTML comments inserted by
       Wayback Machine?
       wayback_comments_re - regular expression match for comments appended by
       the Wayback Machine.
       web_print_runtime_data (yes/no) - Append MakeStaticSite runtime session
       data summary to web pages?
       Updated options_check_yesno and options_nodeps_load arrays accordingly.
       Added '(' to url_separator_chars.
      [lib/mod_wayback.sh]
       process_wayback_url(): given Memento URL format, changed variable
       assigned to url_original from url.
       Added variable domain_original, analogous to url_original.
       Add functions initialise_wayback() to determine runtime configuration
       for Wayback URL; get_webassets_wayback() to apply Wayback-specific
       filters to determine web asset URLs; consolidate_assets() to
       consolidate snapshot assets in a single location, reflecting the
       original layout; process_asset_anchors() to convert absolute URLs to
       relative URLs for internal anchors; wayback_output_clean() to remove
       (depending on option constants) code and comments inserted in output
       by the Wayback Machine.
      [makestaticsite.sh]
       (various functions): properly escaped sed substitution of URLs,
       using pipe as delimiter (not in list of acceptable URI characters).
       initialise_variables(): moved processing of Wayback Machine URLs
       with calls to new functions, as above, in mod_wayback.sh.
       Define url_robots and url_sitemap according to Wayback settings.
       wget_extra_urls(): When filtering out web pages with non-empty value 
       of asset_extensions, match made case insensitive and added '$' to grep
       clause to ensure strict match on asset extensions; moved filtering of
       Wayback URLs modulo timestamp to later on, via call to
       get_webassets_wayback().
       Added variable url_has_path to denote when a URL has a non-empty path.
       process_assets(): Bug fixes in the generation of relative links to
       imported assets when mirroring whole URLs prepended with path prefix,
       dropped the web assets folder prefix; path prefix depth trimmed by URL
       path depth, as appropriate (not confined to Wayback URLs).
       For Wayback Machine URLs: urls_array generated by Wayback-augmented
       input_file_extra file, defined in wget_extra_urls; when converting
       absolute links to relative links, further adjustment made to path depth
       variables; modifications to asset_rel_path assignment; and replace
       double slashes in paths with single slashes.
       Inserted call to consolidate_assets() to consolidate output, removing
       timestamped directories; to process_asset_anchors() to add
       internal navigation to index pages in Wayback Machine snapshots; and
       to wayback_output_clean() to optionally remove code inserted by Wayback
       Machine.
       clean_mirror(): Depending on value of wayback_domain_original, restore
       original domain name for mirror directory.

0.29.9 (released on 2024-06-03)
       * Maintenance, with additional processing of assets and display
         refinements *
        [lib/constants.sh]
         Added constant, relativise_primarydomain_assets, for the handling
         of additional assets from the primary domain.
        [lib/general.sh]
         print_progress(): added optional parameter for column width.
        [makestaticsite.sh]
         wget_extra_urls(): Added progress bar for filtering steps.
         Added condition to filter out lines with primary domain if not
         relativising such assets URLs.
         process_assets(): modified assignment of urls_array to include
         assets from primary domain for site URL with path, conditional on
         the value of relativise_primarydomain_assets. When included, added
         rectification of paths arising from conversion of absolute URLs to
         relative URLs.
         Added progress bar for generating list of pages for converting
         asset URLs to relative links.

0.29.8 (released on 2024-05-29)
       * Maintenance, with bug fixes and performance enhancements *
        [makestaticsite.sh]
         wget_extra_urls(): Partially reverse URL encoding (just &amp; to &)
         to ensure that input_file_extra is accurate.
         Removed superfluous uses of 'cut'.
         process_assets():
         Refactored how pages with potentially relevant assets are found,
         introducing a loop over individual URL regex, avoiding long grep
         search patterns.
         In conversion of absolute links to relative links, simplified
         construction of urls_array to two cases depending on value of
         url_wildcard_capture; when not 'yes' further process items by URL
         encoding ampersands.
         Split url_grep into components to loop over and generate assets list.
         In determining asset_rel_path, replaced use of 'cut' by shell
         parameter expansion to boost performance.
         Bug fix: when looping over all non-primary-domain assets, restored
         separation of two cases depending on value of url_wildcard_capture. 
         Inserted calls to url_percent_encode and sed_rhs_escape in
         replacement paths to enable more accurate links to downloaded assets.
        [lib/constants.sh]
         Added constant, wayback_memento_check, to specify whether or not to
         perform dynamic check for Memento site using HTTP request header.
         Set to 'no'.
         Moved constant wayback_header here from validate.sh
        [lib/general.sh]
         Added functions url_percent_encode() to percent encode URL strings,
         intended for relative URLs; and sed_rhs_escape() to escape special
         characters in right hand side of sed expressions

0.29.7 (released on 2024-05-20)
       * Maintenance, with bug fixes in initialisation and asset processing *
        [lib/constants.sh]
         Added file type categories to query prune list plus a few changes to
         option arrays for further per-run customisation.
        [lib/config.sh]
         config_get(): Bug fix: for the case an option is already defined
         before allOptions array, attempt to read value from config file
         before echo and return.
        [lib/general.sh]
         Localised variables in functions.
        [makestaticsite.sh]
         initialise_variables(): only replace double-slashes when URL has a 
         directory path
         process_assets(): bug fixes: define a copy of the original value of
         page_element_domains to ensure urls_array is properly defined;
         define extra_domains only in terms of the directories actually 
         generated by Wget. 
         For the conversion of absolute URLs to relative URLs, fixed bug in
         handling of replacement URLs and refactored to avoid duplication;
         in case URLs contain the domain name, added the case where the URL is
         a directory path (as a backup when Wget omits any link conversions.)

0.29.6 (released on 2024-05-13)
       * Maintenance, mainly bug fixes in initialisation *
        [lib/constants.sh]
         Renamed constant from wayback_enable to wayback_cli.
        [lib/config.sh]
         config_get(): Bug fix: for the case an option is already defined
         before allOptions array, just echo it and return. 
        [makestaticsite.sh]
         initialise_variables(): made detection of Wayback URLs not dependent
         on use of Wayback Machine client; defined a new variable, wayback_url,
         to denote whether or not use of Wayback Machine has been established.
         Bug fix: reading dependency options array ahead of assigning option
         variables; minor bug fix to shorten filename for wget_inputs_extra_all.
         wget_extra_urls(): added condition on wayback_url to filter out
         duplicates in webassets array, ignoring timestamp.
         process_assets(): refactored assignment of asset_rel_path to ensure
         consistency when determining relative paths of assets.
         Trap case and warn when there are no webpages for postprocessing.

0.29.5 (released on 2024-05-01)
       * Maintenance and refinement, with Wget workaround to better support
        mirroring archive.org and refactoring of option variables assignment *
        [lib/constants.sh]
         New constant: path_doubleslash_workaround to specify whether or not
         to make adjustments for URL paths containing double slash.
         New array constant options_nodeps_load to specify list of options 
         whose assignment is not dependent on others.
        [lib/config.sh]
         New function assign_option_variables(): assigns option variables
         according to a supplied list (array name reference).
         New function get_options_list(): extracts a list of option variables
         from allOptions_deps array.
        [general.sh]
         confirm_continue(): modified to make confirmation follow standard
         behaviour with capitalized yes/no default.
         print_progress(): cosmetic change to output, to fill more of the
         terminal screen.
        [makestaticsite.sh]
         initialise_variables(): refactored assignment of option variables to 
         use assign_option_variables() for variables without dependencies.
         Conditional on path_doubleslash_workaround, replace double slashes in
         URL paths with single slashes.
         process_assets(): added progress bar for processing assets (mirroring
         a URL with path), plus cosmetic changes in output.

0.29.4 (released on 2024-04-17)
       * Maintenance and refinement, including important bug fix to restore
         performance for processing URLs for link converstion *
        [lib/constants.sh]
         Modifed comments to clearly distinguish the capture and processing
         of assets from the directory layout management; renamed constant
         from url_asset_match_level to url_asset_capture_level.
         modified definition of domain_re and domain_re0 for wider shell
         support.
         New constants: url_wildcard_capture - use a wildcard for matching
         URLs in asset processing (yes/no) instead of actual URLs? 
         url_separator_chars - additional class of separator characters
         (regular expression capture class) of URLs to be captured.
        [setup.sh]
         read_option(): Added a check in interactive mode on URL syntax.
        [general.sh]
         assets_search_string(): expanded scope of regex captures for URL
         paths in assets search.        
         Added function regex_apply() to apply backslash prefix to enable
         regex (special) metacharacters for ‘?’, ‘+’, parentheses ‘()’,
         braces ‘{}’, and ‘|’.
         regex_escape(): additionally, revert an existing prefixed metachar.
         assets_search_string(): added further optional prefix for URLs list.
        [makestaticsite.sh]
         initialise_variables(): filter out spaces from domain lists; omit
         special case of 'auto' from validation of page_element_domains.
         wget_extra_urls(): Expanded scope of search on domains by replacing
         occurrence of domain_re with domain_re0, removing anchors.  Also
         ensured BRE version for use in sed.
         process_assets(): bug fix: escaped backslashes to ensure that
         urls_array does not store URLs from the mirrored domain.
         Fixed the counter to ensure progress bar reaches 100% when complete.
         Replaced references to url_asset_match_level with
         url_asset_capture_level.
         Before attempting to move import directories generated from domain
         names, check that candidate directories actually exist in archive
         root.
         Added routines: to generate the list extra_domains and corresponding
         extra_domains_array when url_wildcard_capture=yes; and to ensure
         variables all_domains and url_grep are correctly assigned when
         starting run at postprocessing phase. Also added routine to generate
         a wildcard URLs array when page_element_domains is set to 'auto'.    

0.29.3 (released on 2024-04-15)
       * Maintenance and refinement: bug fixes and enhancements to mirror
         output *
        [lib/constants.sh]
         New constants: wget_mirror_options to specify mirror options for Wget
         (default is equivalent to --mirror); prune_query_strings (y/n) to
         specify whether or not to remove query strings appended to paths and
         URLs in anchors, limited to files of type given in query_prune_list.
         New constants: web_element_extensions, font_extensions,
         image_extensions, audiovideo_extensions, and doc_extensions for file
         extension lists according to document type; updated asset_extensions,
         asset_extensions_external and query_prune_list accordingly.
         Extended comments on Wget settings.
        [lib/validate.sh]
         New function validate_domain() to check domain syntax
         validate_url(): introduced start and end anchors 
        [lib/general.sh]
         New function print_progress() to print a progress bar (a bar and
         percentage)
        [makestaticsite.sh]
         initialise_variables(): added domain checks on asset_domains and
         page_element_domains, removing any invalid elements; strip out
         excess whitespace.
         wget_extra_urls(): made the pruning of links to assets that have query
         strings appended dependent on value of prune_query_strings, extending
         pruning to links with url encoding of '?'; pruned corresponding
         linked filenames.
         generate_extra_domains(): modified sed replacements in
         page_element_domains to ensure removal of slashes.
         process_assets(): bug fix: trap case when extra_domains_array contains
         an empty member ahead of moving directories.
         Added progress bar while converting absolute links to relative links.
         Cosmetic changes: a few additional comments and minor code ordering

0.29.2 (released on 2024-03-15)
       * Maintenance and refinement: more thorough conversion of links from
         absolute to relative URLs. *
        [lib/constants.sh]
         New constants: wget_extra_urls_depth to support multiple re-runs of
         Wget.
        [lib/general.sh]
         New function regex_escape(): escape regular expression metacharacters
         according to whether basic or extended regular expressions are used
        [makestaticsite.sh]
         Switched from extended to basic regular expressions when using sed
         with back-references, switching escaping of metacharacters as
         appropriate - this is to support BSD versions, including macOS.
         main(): wget_extra_urls is invoked within a loop, depending on the
         values of wget_extra_urls_count and wget_extra_urls_depth.
         initialise_variables(): new variable, wget_inputs_extra_all, stores
         accumulated inputs for wget_extra_urls(), initialised according to
         phase; wget_extra_urls_depth and wget_extra_urls_count initialised
         according to context.
         wget_extra_urls(): routines updated to take account of multiple runs,
         with an additional routine to update wget_inputs_extra_all.
         process_assets(): introduced metacharacter escape on contents of
         input_file_extra, used for converting assets with absolute URLs to
         relative URLs. Also, as for site_postprocessing(), replaced reference
         to wget_inputs_extra by wget_inputs_extra_all.

0.29.1 (released on 2024-03-08)
       * Maintenance: Bug fixes to ensure fine-tuning of output works as
         intended. *
        [lib/constants.sh]
         New constants: web_source_exclude_dirs to list directories under
         which files are to be excluded from search and replace; 
         htmltidy_source_extensions for web document file 
         extensions intended for HTML Tidy; system_files_cleanup, list of
         unwanted system files, to be removed from mirror output.
        [lib/general.sh]
         wget_canonical_options(): bug fix: inserted a missing space in
         search pattern for --exclude and --include replacements.
        [makestaticsite.sh]
         Added function initialise_include-excludes() to initialise
         asset_exclude_dirs, the list of directories to exclude from Wget
         postprocessing (phase 3), now called immediately after assignment
         of working_mirror_dir.  Bug fix: rearranged order of options where
         asset_exclude_dirs used in find commands - in wget_extra_urls(),
         process_assets() and site_postprocessing().
         initialise_variables(): added htmltidy_file_exts array, initialised
         from htmltidy_source_extensions.
         wget_extra_urls(): bug fix: inserted missing context for regex search
         to prune links with query strings appended.  
         clean_mirror(): modified HTML Tidy loop to loop over extensions in
         htmltidy_file_exts with change to STDERR redirection to append
         errors to HTML Tidy errors file; replaced ad hoc removal of .DS_Store
         file with a loop over system_files_cleanup.
         
0.29 (released on 2024-02-29)
     * Restructuring and refinement of postprocessing: with various extension
       to support scheme relative URLs, CORS, and assets with long filenames *
      [lib/constants.sh]
       New constant domain_re as a loose regex approximation to a domain.
       New constant asset_url_match_level as a measure of strictness of
       matching asset URLs.
       New constant web_source_exclude_dirs to list directories to exclude
       relative to working mirror directory)
       New constant cors_enable for allowing cross-origin resources once
       downloaded. Cosmetic structuring with new section, 'Processing of
       downloaded assets and resources'; new constants long_filename_threshold
       and wget_long_filenames for processing of URLs with long filenames;
       new constant extra_assets_allow_query_strings to support filtering of
       assets with query strings; new constants wget_protocol_relative_urls
       and wget_protocol_prefix to support Wget in fetching protocol-relative
       URLs.
      [lib/general.sh]
       whichos(): introduced sed_ere_options and xargs_options to support
       extended regular expressions
      [makestaticsite.sh]
       initialise_variables(): added asset_exclude_dirs array, initialised from
       web_source_exclude_dirs. Applied selectively in wget_extra_urls() and
       process_assets().
       Added asset_grep_includes and asset_find_name arrays, initialised from
       web_source_extensions list, for `find -names` and `grep --include`
       respectively. Substituted ad hoc occurrences of these options in
       generate_extra_domains(), wget_extra_urls, process_assets(),
       site_postprocessing() and clean_mirror().
       For sed invocations, replaced basic regular expressions with extended
       regular expressions wherever back-references used.
       wget_extra_urls(): Added routine to prefix protocol-relative URLs with
       a protocol ahead of Wget phase 3 downloads.
       URLs with query strings can filtered more flexibily and efficiently.   
       Added routine to detect URLs with long filenames in input_file_extra,
       and store shorter alternatives in input_long_filenames.
       process_assets(): added routine to crawl downloaded pages and convert
       long filenames to shorter versions determined previously.
       Derived another URLs array for scheme relative URLs (extra asset
       domains), processed in the same way as for urls_array.
       Laxer search and replacements (absolute to relative URLs) now depend
       on the value of url_asset_match_level being less than a constant.
       site_postprocessing(): inserted global deletions of crossorigin tag
       conditional on value of cors_enable.

0.28.7 (released on 2024-02-12)
      * Maintenance: improved handling of asset processing, with bug fix *
      [makestaticsite.sh]
       process_assets(): inserted conditional to ensure script does not
       attempt to move assets inside themselves;
       bug fix: in the clause to update hyperlinks to assets downloaded
       from other domains, modified definition of asset_rel_path,
       inserting relative path prefix and removing assets directory.

0.28.6 (released on 2024-01-15)
      * Maintenance: mainly improved cookie handling, specifically in regard
        to user agents.; upped software copyright year to 2024 *
      [lib/validate.sh]
       validate_http(): constrained assignment of redirect effective URL to
       omit Wayback Machine URLs.
      [lib/constants.sh]
       New constant wget_cookies_min_filelength to support checks for valid
       cookies file; new constant wget_cookies_nullify_user_agent to specify
       whether or not to omit user agent string when a login is required
       (to ensure cookies file written correctly)
      [makestaticsite.sh]
       wget_mirror(): added checks for wget_cookies_nullify_user_agent when
       appending a user agent option to Wget requests.
       Added error handling when an empty cookies file is generated.

0.28.5 (released on 2023-11-27)
      * Maintenance: custom user agent strings (bug fix and extended use) *
      [lib/validate.sh]
       validate_http(): added --user-agent option to cURL when determining
       connectivity; and added --insecure option for url_effective
      [makestaticsite.sh]
       wget_mirror(): deleted superfluous double quotes around constant,
       wget_user_agent; concatenated error message for improved reporting;
       added wget_user_agent to wget_extra_options rather than
       wget_core_options to ensure its use whenever Wget is run.

0.28.4 (released on 2023-11-14)
      * Refinement: improved support for URLs with redirects *
      [lib/constants.sh]
       New constant max_redirects to specify maximum number of redirects
       allowed for determining the effective URL being mirrored.
      [lib/validate.sh]
       validate_http(): extended checks for redirects and added new routine
       to follow them to determine the effective URL, which is then assigned
       to $url option; added standard styling of output warning and error
       statuses.
       validate_input(): added "input_value" as parameter in call to
       validate_http()
      [setup.sh]
       read_option(): added "input_value" as parameter in call to
       validate_http()

0.28.3 (released on 2023-11-07)
      * Maintenance: bux fixes for web form authentication and input URLs *
      [makestaticsite.sh]
       initialise_variables(): added assignment of web form login options
       using config_get(), namely for: login_path, login_address,
       login_user_field, login_pwd_field and cookie_session_string.
       wget_mirror(): following changes to setup, login_address
       now only assigned when a login is required;
       bug fix: read input_urls_file config option for input URLS file.
       Some minor changes to terminal output.

0.28.2 (released on 2023-10-31)
      * Netlify deployment error traps and maintenance *
      [lib/constants.sh]
       Added cleanup section with new yes/no constant clean_query_extensions
       to remove query strings from filenames output by Wget. 
      [makestaticsite.sh]
       Removed excess trailing spaces.
       Added script sign-off message to output
       read_config(): added log file name info to error message 
       clean_mirror(): Added conditional pruning of filenames of appended
       query strings. This is to ensure compliance with Netlify hosting.
       deploy_on_netlify(): Added check for exit code when running Netlify
       and report error, if necessary.
       process_assets(): silenced log output from asset_path.

0.28.1 (released on 2023-10-20)
      * Improved support for parallel runs, involving login sessions. *
       Made setup more flexible to allow mirroring a range of sites requiring
       logins. More granular file names and other measures for more robust
       support for parallel runs.  Some essential maintenance.
      [lib/constants.sh] 
       Moved login_path, logout_path, login_user_field, login_pwd_field
       and cookie_session_string into allOptions; added fields to
       dependencies on require_login in allOptions_deps.
       In allOptions_deps array, deploy_rsync relabelled deploy_remote_rsync
       and deploy_path added as a dependent.
       Removed extensions from wget_cookies, wget_post, htmltidy_errors_file
      [makestaticsite.sh]
       wget_mirror(): appended configuration id and timestamp to values of
       wget_cookies and wget_post, allowing parallel processing of login
       sessions.
       clean_mirror(): appended configuration id to html_errors_file
       wget_process_credentials(): security bug fix: prevented credentials
       being written to log file
       deploy(): refactored for cleaner separation between remote and local
       deployment; made local deployment more robust, with error handling;
       fixed errors reported with rsync when rysnc deployment not selected.
       deploy_on_netlify(): inserted netlify unlink to ensure each deployment
       is based on correct mirror.

0.28 (released on 2023-10-14)
    * Extended support for authentication and credentials management *
     Added measures to make use of bash http authentication and web form
     logins more secure through a combination of encryption and credentials
     management, using 'pass'. Some maintenance.
    [lib/constants.sh]
     Added a new set of options for credentials processing and storage:
      credentials_rc_file (.wgetrc or .netrc) - the 'run commands' file for
     (temporary) storage of credentials;
      credentials_cleanup: delete references to credentials in temp files and
     .rc file on completion of run (y/n)?
      credentials_manage_cmd - [path to] binary for managing (and encrypting)
     credentials;
      credentials_manage_cmd_url - credentials manager download URL;
      credentials_storage_namespace - MakeStaticSite-specific directory for
     storing credentials (usernames, passwords, tokens, etc.); 
      credentials_storage_mode - how to store credentials (with support for
     encryption);
      credentials_extension - encryption file type extension; 
      credentials_home - directory in which credentials are stored;
      credentials_namespace_suffix, credentials_path_prefix used to determine
     full path to credentials home.
     Added further options for Wget:
      wget_http_login_field - Wget user login field for HTTP authentication; 
      wget_http_password_field - Wget password field for HTTP authentication;
      wget_post=wget_post.txt - name of file containing POST data.
     allOptions array: Modified wget_extra_options__info to clarify how (not)
     to enter the password as an option; added option options_credentials
     for credentials that may/should be encrypted.
    [setup.sh]
     New function, read_credentials(), support function for read_option(),
     that reads user input in several ways.  Dependent on the value of
     credentials_storage_mode, may be encrypted or kept as plain text, and
     stored in the dedicate storage area, under credentials_home.  This is
     handled by the credentials_manage_cmd (i.e, the 'pass' command,
     https://www.passwordstore.org/).  Even if stored as plain text, the
     input of passwords is hidden.
     Alternatively, the existing (deprecated) method of storing passwords
     in the .cfg file is also available.
     read_option(): inserted checks on the current option (optvar).  If it
     is a member of options_credentials array, then call read_credentials.
     If is wget_extra_options and this option contains --user and not
     --password then call read_credentials
     process_options(): added clause to exclude site_password from being
     requested when credentials_storage_mode not equal to 'config'.
     write_config(): added touch and chmod commands for output file to ensure
     correct file permissions
    [makestaticsite.sh]
     initialise_layout(): set up run commands file with correct permissions;
     initialise_variables(): retrieve credentials from relevant credentials
     store and process.
     New function, wget_process_credentials(), to retrieve and process
     credentials, using the run command file as temporary storage for Wget.
     wget_mirror(): modified wording to account for support for credentials;
     inserted new section to handle the case of a website (form-based) login:
     support for working with credentials (plain and encrypted); a temporary
     file for Wget --post-file option (to hide the password from ps and logs).
     clean_mirror(): remove the temporary Wget files plus credentials from
     run command files.
    [lib/general.sh]
     Added function input_encrypted_password() for inputing a password using
     the 'pass' command.
    [lib/config.sh]
     config_get(): added a further option parameter for the full path to
     configuration (.cfg) files, allowing wider script usage.

0.27.8.2 (released on 2023-10-03)
        * Bug fix for processing domains *
        [makestaticsite.sh]
         generate_extra_domains(): bug fix for macOS: additional tweak to
         ensure domains don't end in trailing slash (impacts asset directory
         moves).
         process_assets(): clarify wording for moving directories.

0.27.8.1 (released on 2023-10-11)
        * Bug fixes for handling URLs *
        [lib/general.sh]
         assets_search_string(): removed opening delimiter from URLs list
        [makestaticsite.sh]
         initialise_variables(): changed method of ensuring URL ends in
         trailing slash (to support macOS).

0.27.8 (released on 2023-10-10)
      * Performance speed-up and maintenance, including bug fixes
      [lib/constants.sh]
       changed value of assets_directory from 'assets' to 'webassets';
       added page_element_domains to options_allow_empty array.
       Added explanatory comments for various option-related arrays.
      [makestaticsite.sh]
       generate_extra_domains(): bug fix: inserted comma for augmenting
       all_domains with extra_domains; a minor tweak to terminal output.
       wget_extra_urls(): "Generating list of extra asset URLs" added to
       terminal output.
       process_assets(): populating URLs array from Wget's additional
       input file constrained to URLs other than those of $domain;
       removed superfluous echo statements from log.
      [lib/general.sh]
       wget_error_check(): on abort, changed advice about setting level.

0.27.7.1 (released on 2023-10-09)
        * Bug fixes *
        [lib/constants.sh]
         Corrected info and description labels for page_element_domains;
         modified options_allow_empty to allow asset_domains to be empty
         during setup.

0.27.7 (released on 2023-10-09)
      * Refined handling of assets from additional domains plus maintenance *
      [lib/constants.sh]
       Augmented asset_extensions with font file extensions;
       Added a new constant, asset_extensions_external, a more limited set
       of file extensions for assets gleaned from external domains.
       Added new constant, page_element_domains, to designate domains used
       to construct and style web pages rather than downloadable assets.
       This now assumes the default of auto over asset_domains, which should
       now be a specific list.
      [setup.sh]
       read_config(): when running unattended, check that run level is 0 or
       else abort.
      [makestaticsite.sh]
       initialise_variables(): extended processing to take account of new
       constant, page_element_domains, and revised extra_domains;
       references to extra_domains replaced by asset_domains; 
       generate_extra_domains(): references to extra_domains replaced by
       page_element_domains; extended processing to take account of new
       constant, page_element_domains.
       wget_extra_urls(): cosmetic changes to terminal output;
       modified HTML assets filter to reference page_element_domains.
       site_postprocessing(): Moved code to process asset locations to new
       function, process_assets(); this is called within a new conditional
       that checks whether there are URLs to process or the site URL has a
       path (with assets to gather); for clarity, 'extra_domains_array' label
       replaced by 'extra_domains_array'

0.27.6 (released on 2023-10-05)
      * Maintenance: fixed syntactical issues plus a bit of file management *
      [lib/constants.sh]
       Added constants, mss_file_permissions and mss_dir_permissions for
       default file and directory permissions respectively;
      [lib/general.sh] 
       get_inks(): inks wrapped in double quotes to prevent word splitting.
       Added new function touchmod() to touch a file and assign permissions.
      [lib/validate.sh] 
       validate_dir(): made separate cases for local and remote usage
       validate_input(): Modified code (quoting of spaces) when testing a
       string for array membership
      [makestaticsite.sh]
       Replaced occurrences of touch with touchmod command.
       Log file definition moved (back) to start of initialise_layout()
       to ensure log file name can be set as input option.

0.27.5 (released on 2023-09-12)
      * Enhanced setup validation and maintenance *
       Bug fixes for remote site directory checking and cookie files;
       extended validation and unattended error reporting in setup.
      [lib/constants.sh]
       allOptions array: moved site_path underneath source_user, as remote
       validation dependent on source details.
       Added array variable, options_check_remote for variables that may
       apply to remote hosts.
      [lib/general.sh]
       Reordered functions, grouping wget-related functions together;
       added function remote_command_prefix() to determine command, protocol
       plus options for executing remote checks (currently only ssh).
      [lib/validate.sh]
       validate_dir(): extended to allow for remote usage
       validate_http(): limited curl status check with limit on number of
       redirects and added explanatory comments on options; added support
       for running unattended
       validate_input(): extended check to remote site location directories.
      [setup.sh]
       read_option(): added error reporting (with abort) for unattended runs;
       added variable assignment for options, to be used throughout script.
      [makestaticsite.sh]
       Moved core variable assignment, script_dir and log_file, from
       initialise_layout() to start of main().
       mirror_site(): modified terminal output for Wayback Machine Downloader
       to facilitate remote error trapping.
       wget_mirror(): touch cookie files when not defined.
       clean_mirror(): Added command to remove empty directories.

0.27.4 (released on 2023-08-25)
      * Maintenance and refinement *
       Extended workflow support for extra domains
      [lib/constants/sh]
       Added new constant, imports_directory, to designated assets imported
       from external domains; add 'svg' to query_accept_list
      [makestaticsite.sh]
       main(): workflow: added start+end phases condition on cut_mss_dirs();
       timestamp now defined in initialise_variables(), not mirror_site().
       site_postprocessing(): renaming: hp_prefix to assets_dir_suffix, hp
       to url_extra, hpdomain to url_extra_domain, hppath to asset_rel_path.
       Added new variable, imports_dir_suffix, defined like assets_dir_suffix;
       Replacement path now concatenates assets and imports directories, 
       assets downloaded by Wget from extra domains now initially moved
       to imports directory (ahead of being moved to assets directory)
       Updated sed replacements accordingly.
       Moved code to generate list of extra domains, extra_domains, to new
       function, generate_extra_domains, called in both wget_extra_urls()
       and site_postprocessing(), to support running from phase 4 onwards.

0.27.3 (released on 2023-08-18)
      * Maintenance *
      [makestaticsite.sh]
       site_postprocessing(): bug fix: added condition preventing 
       directories being moved into subdirectories;
       initialise_layout(): bug fix: append - not write - to log file, 
      [lib/constants.sh]
       set extra_domains=auto, for fuller mirroring 'out of the box'
      [lib/general.sh]
       Made use of tput dependent on an appropriate terminal
       yesno(): Removed superfluous logging by prepending echo() with 'env'
      [lib/mod_wayback.sh]
       check_wayback_url(): removed superfluous logging (as above)

0.27.2 (released on 2023-07-20)
      * Maintenance and enhanced support for logging *
       Bug fixes (errors/warnings) in library files aided by ShellCheck:
       lib/general.sh; lib/mod_wayback.sh; lib/mod_wp.sh; lib/validate.sh
      [lib/setup.sh]
       Renamed get_configfile() as read_config() and added
       command line option for log file name
       conclude(): added log file name, when non-empty, as command-line
       option for makestaticsite.sh
      [makestaticsite.sh]
       read_config(): added command line option for log file name, 
       promoting read_config() ahead of initialise_layout();
       reordered the functions and tweaked echo() accordingly.
       Added timestamps to start and end of logging.
       A few other, mainly cosmetic, changes.

0.27.1 (released on 2023-07-18)
      * Added support for Wayback Machine URLs extended with date ranges * 
      [lib/constants.sh]
       Added constant, mod_wayback, to specify name of module file name
      [lib/mod_wayback.sh]
       A new library module for use specifically with the Wayback Machine;
       moved wmd_get_wayback_site() from makestaticsite.sh;
       moved wayback_check_url() from lib/validate.sh and renamed
       check_wayback_url(); 
       added function, process_wayback_url(), to extract and validate the
       archive URL and date or date range respectively.   
      [lib/validate.sh]
       Added function validate_timestamp() to validate partial and complete
       timestamps.
      [setup.sh]
       read_option(): inserted call to process_wayback_url "$input_value" to
       validate input.
      [makestaticsite.sh]
       initialise_variables(): removed processing of Wayback URLs, replaced
       with call to process_wayback_url() in mod_wayback.sh.

0.27.0.1 (released on 2023-07-13)
      * Maintenance release and refinement *
      [lib/constants.sh]
       Added constant wayback_machine_statuscodes
      [makestaticsite.sh]
       initialise_variables(): bug fix for reading value of wayback_date_to
       wmd_get_wayback_site(): added support for all HTTP status codes

0.27 (released on 2023-07-12)
    * Added support for Wayback Machine Downloader*
     Renamed constant, wget_post_processing to site_post_processing, updated
     all references.
    [lib/constants.sh]
     Added constants to support querying of Wayback Machine:
     mod_wayback for Wayback Machine module filename; wayback_enable; 
     wayback_hosts, wayback_date_from, wayback_date_to, wayback_matchtype,
     wayback_wget_options.
     Added two options specific to Hartator's Wayback Machine downloader:
     wayback_machine_downloader_url and wayback_machine_downloader_cmd
    [lib/general.sh]
     Added timestamp() function
    [lib/validate.sh]
     Added function: validate_internet() to test Internet connection 
     Added function: wayback_check_url() to check whether a given URL is for
     a valid Wayback Machine service.
    [makestaticsite.sh]
     initialise_variables(): added checks for Wayback Machine URL, extracting
     URL and domain of the archived host, parameters for the downloader.
     Added a few conditionals to ensure subsequent processing.
     Added function mirror_site() to coordinate site captures (may or may not
     call wget_mirror). Moved setting of timestamps here.
     Renamed function wget_postprocessing to site_postprocessing.
     Added function wmd_get_wayback_site() to run Wayback Machine Downloader
     with various parameters.
     Some minor changes, mainly cosmetic.
    [setup.sh]
     read_option(): inserted check for Wayback Machine URL

0.26.1 (released on 2023-07-04)
      * Maintenance release *
      [setup.sh]
       Code tidy to fix Shellcheck errors
      [README.md]
       Updated features and limitations

0.26 (released on 2023-07-03)
    * Enabled setup to run in unattended mode on provision of a URL *
    [lib/constants.sh]
     Added constant mod_wp for WordPress module filename.
     Added --tries=3 (replacing default of 20) to $wget_core_options.
    [makestaticsite.sh]
     main(): minor cosmetic tidying
     read_config(): added support for 'u' (run unattended) option that does
     not take an argument.
     prepare_static_generation(): uses $mod_wp for WordPress module name.
    [lib/setup.sh]
     write_config(): removed option to write file to default for level 0.
     main(): moved command line input validation to get_configfile().
     get_configfile(): added support for 'u' (run unattended) option that
     does not take an argument;
     added support for a single parameter (not option) for URL;
     added validation checks for URL (and dependency for running unattended).
     read_option(): when URL supplied via command line, do not request input.
     write_config(): added auto-generation of configuration filename when
     running unattended; counter used to ensure file doesn't already exist.
     Removed option to write to default.cfg for level 0.
     conclude(): if running unattended, then makestaticsite will be run in
     unattended mode too.
    [lib/validate.sh]
     Added validate_url() to validate the syntax of a URL.
     validate_range(): added clause to check if string is an integer.
     
0.25.6 (released on 2023-06-15)
      * Added support for custom cut directories (url shortening) *
      [lib/constants.sh]
       Added constants mss_cut_dirs: for URLs with paths, this cut outs parent
       directories, promoting the web content.
      [lib/general.sh]
       yesno(): extended function to interpret 'on'/'off' as 'yes'/'no' and to
       allow for returning original value other than 'yes' or 'no'.
      [makestaticsite.sh]
       Added two kinds of support for cut directories:
       native (via mss_cut_dirs) preserves original directory paths, and 
       supports consolidation of files in assets/ directory; 
       Wget --cut-dirs, but no support for assets/ directory consolidation.
       main(): inserted inter-phase process to support cut directories'
       initialise_variables(): moved computation of cut directories and
       url_path here as they are used in multiple phases'
       wget_postprocessing(): added constraints to prevent assets/ directory
       routine when Wget --cut-dirs options set.
       Added function cut_mss_dirs(): if Wget --cut-dirs not specified, then
       move top-level index.html to root directory.

0.25.5.1 (released on 2023-05-22)
        * Bug fix for setup *
        [lib/setup.sh]
         process_options(): added OR clause to string_count to ensure
         exit code 0

0.25.5 (released on 2023-05-21)
      * Added support for Wget --no-host-directories plus maintenance *
      [lib/general.sh]
       pluralize(): fixed printf empty string
      [lib/constants.sh]
       Added constants: domain_match_prefix and domain_subs_prefix to
       contextualise replacement of source domain with deploy domain.
      [makestaticsite.sh]
       wget_postprocessing(): streamlined the code for converting absolute
       links to relative links; tweaked reading of array to ensure that error
       traps not inadvertently set.
       Added support for Wget --no-host-directories (or -nH)

0.25.4.1 (released on 2023-05-09)
        * Maintenance *
        [lib/constants.sh]
         Added new option: zip_omit_download (default=yes) to specify whether
         or not to exclude the website download folder from the zip file.
        [makestaticsite.sh]
         wget_postprocessing(): bug fix to reinstate functionality:
         inserted OR clause for URLs with empty paths when carrying out
         universal search and replace on primary domain.
         create_zip(): inserted code to exclude zip_download directory from
         zip file depending on value of zip_omit_download.

0.25.4 (released on 2023-05-07)
      * Fixes to enable fuller support for mirroring URLs with directories *
      [makestaticsite.sh]
       initialise_variables(): Added initialisation of all incorporated domains
       wget_postprocessing(): Added a check on Wget mirror: if there exists a
       downloaded directory with same name as $assets_directory then append a
       timestamp to latter.
       Adjusted conditionals for converting absolute links to relative links
       (on webpages, not urls_array); also inserted references to all_domains;
       Expanded loop over all parent paths for universal search and replace,
       with a further internal loop for directory traversal of source path.
       Moving of directories refined to handle case of parent directories,
       ensuring the corresponding directory is created in the destination.

0.25.3 (released on 2023-05-05)
      * Added support for Wget --no-parent option for URLs with directories,
        with options to incorporate external files in the assets area *
      [lib/constants.sh]
       Added three new options:
       wget_no_parent specifies the behaviour for URLs with directories;
       parent_dirs_mode specifies handling of assets above such directories;
       external_dir_links specifies handling of internal links outside the
       mirrored directory.
      [lib/general.sh]
       Added function find_web_pages() to grep a list of web pages 
       subject to the given search query and directory.
      [makestaticsite.sh]
       initialise_variables(): moved URL details above Wget options.
       Added routine to ensure --no-parent option, subject to option settings,
       when the URL contains a directory path.
       wget_postprocessing(): Expanded conversion to support internal assets
       external to the directory being mirrored, which can be incorporated
       similarly to content from extra domains.
       Added further explanatory comments.

0.25.2 (released on 2023-04-26)
      * Added automated determination of additional assets to retrieve *
      [lib/constants.sh]
       wget_inputs_main and wget_inputs_extra now define only the stem;
       Maintenance: removed redundant quotation from variable assignment
      [makestaticsite.sh]
       initialise_variables(): config label to be inserted automatically to 
       wget_inputs_main and wget_inputs_extra. This removes potential error
       when running makestaticsite.sh from phase 4.
       Moved the generation of search URL prefixes combining primary domain
       and extra domains from initialise_variables() to wget_extra_urls(),
       adding new routine to generate list of extra domains automatically
       when the .cfg option extra_domains is set to "auto".
       Maintenance: removed redundant quotation from variable assignment
       autogenerate extra_domains.

0.25.1 (released on 2023-04-23)
      * Finer control over additional assets, and maintenance *
      [lib/general.sh]
       Simplified assets_search_string() to two arguments - list of domains
       and path (with a bug fix - url_path for url_grep)
      [makestaticsite.sh]
       echo(): extended priority 2 output to terminal
       initialise_variables(): modified url_grep to read and process domains
       consistently; input_file_extra assignment moved here (else phases break)
       wget_extra_urls(): code tidy
       wget_postprocessing(): method for converting absolute to relative paths 
       for extra domains now constrained to assets already retrieved.

0.25 (released on 2023-04-20)
    * Added support for assets hosted on external domains *
    [lib/constants.sh]
     wget_extra_core_options limited to a single file (with directories)
     Added variables to support assets from extra domains: 
     asset_extensions,query_accept_list, extra_assets_mode, assets_directory.
     Added extra_domains as a user option in allOptions array.
    [lib/general.sh]
     Added function assets_search_string() to build composite search string
     for assets.
    [makestaticsite.sh]
     initialise_variables(): read and process extra domains; moved Web
     assets search to new function in general.sh
     wget_extra_urls(): added routine to prune links with query strings; 
     search for additional assets extended to domains listed in extra_domains;
     acceptance set based on asset file types and rejection of HTML files as
     a falllback.
     wget_postprocessing(): conversion of absolute paths to relative paths
     extended to domains in extra_domains; added routine to move extra domain
     output directories into the primary domain directory.
    [setup.sh]
     Minor text changes to clarify writing to default.cfg;
     running at levels 2 and 3 now asks user to enter value for extra_domains.

0.24.1 (released on 2023-04-03)
       * Refinement of Wget usage *
       [lib/constants.sh]
        Added array variable, wget_progress_indicator, a Wget progress bar
        Changed default runtime settings for log_level and run_unattended
        Some minor changes to text descriptions
       [makestaticsite.sh]
        initialise_layout(): if output_level is silent, then set 
        run_unattended=yes.
        wget_mirror() and wget_extra_urls(): inserted the progress bar for
        Wget when output_level set as 'quiet'
       [README.md]
        Added note about three setup run levels

0.24 (released on 2023-03-31)
     * Setup now supports three runtime levels (minimal, standard, advanced) *
     [lib/constants.sh]
      Added a section for setup-specific settings
      Modified a few option descriptions, such as adding limit-rate for Wget
      Modified deploy default value to a triple, for different setup levels.
      Introduced arrays, options_min and options_std, to limit setup questions.
     [setup.sh]
      main(): added a check on level provided as a command-line arguments
      print_welcome(): Inserted new section introducing three run-time levels,
      requesting user select one of them.
      get_configfile(): added support for option ‘l’ (level)
      read_option(): for levels 0 and 1, constrained questions to those listed
      in options_min and options_std respectively.
      local_sitename and zip_filename now generated from URL's host portion.
      process_options(): added routine to check option for yes/no tuple and
      extract according to level

0.23.1 (released on 2023-03-21)
       * Maintenance *
       [setup.sh]
        Bug fix: Removed superfluous \n written to .cfg file,
        introduced in switch from echo to printf
        Bug fix: writing to another file when not overwriting existing file. 
       [lib/constants.sh]
        Replaced $'\n' with spaces.
        Added 'index.html?'* to list of Wget rejection expressions
        Changing a few text descriptions
       [lib/files/robots.txt]
        Removed erroneous text left inadvertently after test
       [lib/general.sh]
        Stylistic correction to use of printf
       [makestaticsite.sh]
        Minor tweaks on output (adding newlines)

0.23 (released on 2023-03-18)
     * Refactoring based on the removal of processing from constants.sh *
     [lib/constants.sh]
      Added array allOptions_deps to store the control flow logic for
      excluding options during setup.
      Fixed inadvertent newline between definitions of ip4re and ip6re
      Removed all processing from constants.sh (to general.sh)
      Added file lib/files/robots.txt as a default template
      Display settings: just define colours (inks) for message types
      removed trap_error condition and max_phase_num calculation
     [lib/general.sh]
      Added functions colorize() and msg_ink() to define message colours
      Added functions get_inks() to replace code in constants.sh
      Moved echo() to makestaticsite.sh, as it's only used there
     [setup.sh]
      Inserted lib/general.sh as a source library and a call to get_inks()
      get_configfile(): Enabled support for command-line option for output file
      read_option(): replaced case statement for handling option exclusions
      with loop over allOptions_deps. 
      Replaced all but trivial echo statements with printf.
     [makestaticsite.sh]
      Moved definition of max_phase_num from constants.sh
      Moved custom echo() function from general.sh
      robots.txt file now generated using template file
      Bug fix for cross-platform support of cp command on directories:
      in add_extras(), process_snippets() and deploy() when using cp command,
      appended '/.' to source and destination directories to support BSD and GNU.
      Replaced instances of echo with printf to improve code reliability

0.22.3 (released on 2023-03-10)
       * Wget error handling and maintenance *
       [lib/constants.sh]
        Added constant wget_error_level
       [lib/general.sh]
        Added function wget_error_check() to compare given Wget error
        level with wget_error_level and continue or abort accordingly
       [makestaticsite.sh]
        wget_error_codes(): inserted calls to wget_error_check()
        Added support for ports in URL, introduced variable $hostport
        (host[:port]) to replace instances of $domain, except for
        comparison with server's domain (host)

0.22.2 (released on 2023-03-06)
       * documentation and minor enhancement *
       [README.md]
        Substantial update to text to bring it into line with website
        and in anticipation of establishing GitHub repository
       [lib/constants.sh]
        Added constant, wp_remove_rsd_link
       [lib/mod_wp.sh]
        Added support for removing Really Simple Discovery link

0.22.1.3 (released on 2023-02-28)
         * maintenance *
          HTML output tidy
         [lib/constants.sh]
          HTML Tidy settings: added explanation of options, plus --wrap
          option
         [lib/constants.sh]
          Removed temporary echo statements
         [makestaticsite.sh]
          clean_mirror(): added search and replace to wrap lines that end 
          in '='; and ensure <title> tag on one line

0.22.1.2 (released on 2023-02-24)
         * maintenance *
          Code tidy - removed trailing whitespace from lines
         [lib/constants.sh]
          wget_extra_options: moved wp-admin from -R to -X
         [makestaticsite.sh]
          initialise_variables(): wget_input_files initialised as arrray; 
          and in lib/mod_wp.sh it is augmented through concatention, to 
          remove empty line.

0.22.1.1 (released on 2023-02-23)
         * maintenance *
         [lib/constants.sh]
          wget_user_agent set to empty string by default, with guidance on 
          wrapped in quotes to be correctly parsed by Wget
         [makestaticsite.sh]
          initialise_variables(): Bug fix: replaced array assignment with 
          split values using read -a for wget_extra_options 
          (--reject options were being ignored)
          wget_mirror(): added conditional for adding user agent to 
          wget_core_options; it is set to the value of wget_user_agent 
          if that is non-empty, otherwise left (use Wget's default).

0.22.1 (released on 2023-02-22)
       * cosmetic (coloured alerts in terminal output), maintenance *
       [lib/constants.sh]
        Added section for display settings, with coloured inks and message
        constants: msg_error, msg_warning and msg_ok
        Moved rsync_options definition from makestaticsite.sh
       [makestaticsite.sh]
        Implemented coloured alerts using msg_error and msg_warning
        minor code tidy
       [setup.sh]
        Implemented coloured alerts using msg_error and msg_warning

0.22 (released on 2023-02-07)
     * Added support for CDN deployment on Netlify, maintenance *
     [lib/constants.sh]
      allOptions() array: Added fields deploy_netlify, deploy_netlify_name
      plus associated logic, modified text descriptions for deploy_remote and
      deploy_remote_rsync; promoted deploy_domain to immediately follow deploy
     [setup.sh]
      read_option(): further additions to opt_excludes() array for options
      deploy and deploy_remote; new exclusions for opt_excludes() from 
      deploy_rsync and deploy_netlify
     [makestaticsite.sh]
      initialise_variables(): extended condition on $deploy_remote to read
      variables relating to Netlify deployment
      wget_extra_urls(): some minor changes to runtime message output.
      New function and code, deploy_on_netlify(), for deploying to named site
      and moved rysnc connectivity check to new function, prep_rsync()

0.21.5.3 (released on 2023-02-06)
         * Maintenance *
          Cosmetic changes - code tidy (made the layout more regular)

0.21.5.2 (released on 2023-01-31)
         * Maintenance *
          Added further checks for installed components
         [lib/constants.sh]
          Added variables php_version_atleast and php_tutorial_install to support
          PHP checks
         [lib/general.sh]
          Added function which_version() to determine version number of a command
         [lib/mod_wp.sh]
          wp_prep(): added check for PHP plus its version number, moved WP-CLI 
          check here
         [makestaticsite.sh]
          initialise_variables(): Added checks for cURL and Wget
          wget_postprocessing(): Bug fix: find command: moved -depth parameter 
          before -type

0.21.5.1 (released on 2023-01-21)
         * Maintenance *
          Further refactoring following ShellCheck guidelines of makestaticsite.sh, 
          setup.sh, constants.sh, general.sh and validate.sh
          Additional changes:
         [setup.sh]
          init_mssconfig(): Minor formatting corrections involving printf
          read_option(): fixed reference to zip download in opt_exclude array; 
          trim
         [lib/constants.sh]
          Reverted wget_version_atleast to 1.21
          wget_extra_options: changed to reflect more typical WP scenario
         [lib/validate.sh]
          Minor tweaks, including version_check(): corrected reference to version 
          being used, $1; and trimmed input of preceding and trailing whitespace

0.21.5 (released on 2023-01-19)
       * Refactoring, bug fixes and other maintenance *
       [lib/constants.sh]
        Changed default for (ssh) source_port to be the empty string, so only set 
        explicitly when different from ssh's usual port
       [lib/mod_wp.sh]
        wp_prep(): inserted source_port as a parameter for running WP-CLI remotely
       [makestaticsite.sh]
        Refactoring following ShellCheck guidelines (SC2001, SC2044, SC2207, SC2128), 
        affecting mainly wget_extra_urls(), wget_postprocessing() and clean_mirror()
        initialise_variables(): bug fixes: defined myconfig as string; quoted 
        wget_plus_ops in array
        Moved WP-CLI-dependent variables to prepare_static_generation()

0.21.4.1 (released on 2023-01-14)
         * Maintenance *
         [makestaticsite.sh]
          deploy(): modified code to selectively append a_href_tail to internal anchors, 
          to overcome sed processing limit ('file name too long')

0.21.4 (released on 2023-01-10)
       * Simplified setup, improved support for canonical URLs, maintenance *
       [lib/constants.sh]
        Moved wp_search_dir out of allOptions() to become system constant, 
        so value no longer requested in setup.sh, nor read in mod_wp.sh
        Changed location of wp_search_plugin to makestaticsite.sh download/contrib/
        Replaced constant force_index_html with a_href_tail
       [makestaticsite.sh]
        Tightened up use of Bash find to search only type file
        wget_postprocessing(): removed the condition on force_index_html so that 
        index.html provisionally appended to internal links in all runs
        deploy(): inserted code to selectively append a_href_tail to internal anchors

0.21.3 (released on 2022-12-31)
       * Simplified setup and other maintenance *
       [lib/constants.sh]
        Moved wget_cmd, htmltidy_cmd and htmltidy_options out of allOptions() 
        to become system constants, so values no longer requested in setup;  
        zip_uploads_folder renamed zip_download_folder and default value changed
       [lib/validate.sh]
        Added functions version() and version_check() for version number comparisons
       [setup.sh]
        init_mssconfig(): added checks for curl, wget, and rsync; and wget version check
       [makestaticsite.sh]
        zip_uploads_folder renamed zip_download_folder

0.21.2 (released on 2022-12-17)
       * Phases consolidation and other maintenance *
       [lib/constants.sh]
        inserted --reject 'index.html?*' as wget_extra_options default
       [lib/general.sh]
        added function stopclock() to print elapsed time in hours, minutes and seconds
       [makestaticsite.sh]
        ensure zip file generated whenever phase 8 included
        initialise_variables(): properly deduce input file from -m option; 
        further tweaks to fully support all valid permutations of p and q.
        clean_mirror(): filter out query strings from sitemap

0.21.1.1 (released on 2022-12-13)
         * Maintenance *
         [makestaticsite.sh]
          clean_mirror(): added clause to filter out query strings from site maps
         [lib/general.sh]
          sitemap_header(): bug fix: removed misplaced \"

0.21.1 (released on 2022-12-10)
       * Maintenance (refactoring and bug fixes) *
       [lib/constants.sh]
        Removed sitemap_header and sitemap_footer, introduced sitemap_schema
       [lib/general.sh]
        Added sitemap_header() to print site map header
       [makestaticsite.sh]
        process_snippets(): removed now-redundant routine to add snippets to zip
        create_zip(): bug fix: ensured correct working directory (mirror_dir);
        clean_mirror(): moved canonical URL generation here

0.21 (released on 2022-12-09)
     * Improved support for search engines and refinement *
     Some refactoring around zip creation; reconstructed canonical URLs, added 
     support for robots and site maps
     [lib/constants.sh]
      Added new variables: link_rel_canonical (yes/no), link_href_tail to 
      handle inclusion and format of canonical URLs in <head>
      Added yes/no switches: robots_create, sitemap_create
      Added robots_default, sitemap_file, sitemap_header and sitemap_footer
     [makestaticsite.sh]
      main(), read_config(): introduced new phase 6, Optimise the mirror; 
      moved Create offline zip archive to phase 8.
      wget_mirror(): added wget calls for detecting and fetching robots.txt and 
      site map (with support for nested site maps)
      wget_extra_urls(): trapped remaining empty cases in filtering
      wget_postprocessing(): reconstructed canonical URL (replaced Wget output);
      introduced bypass for strings within <code> tags; 
      added XML files to domain replacements
      clean_mirror(): added robots.txt and site map file creation

0.20 (released on 2022-11-30)
     * Maintenance and refinement *
     [lib/constants.sh]
      Added switches for WordPress options: wp_remove_query_strings, 
      wp_remove_shortlink, wp_disable_embeds, wp_disable_xmlrpc, 
      wp_remove_wlwmanifest_link, wp_remove_rest_api_links
      Replaced --show-filename with --gnu-emacs for backwards compatibility
      Fixed options_check_url to include url instead of url_base
     [lib/mod-wp.sh]
      Added support for Perform options for each WP switch defined in constants.sh
      and refactored with new function, wp_option_set()
     [lib/validate.sh]
      cmd_check(): call to echo() now passes on second parameter
     [makestaticsite.sh]
      wget_postprocessing(): bug fix: replaced grep with find to calculate matches 
      on $domain

0.19.7.4 (released on 2022-11-28)
       * Maintenance *
       [lib/constants.sh]
        Introduced variable, force_domains, for domain substitution
       [makestaticsite.sh]
        wget_postprocessing(): reworked the domain substitution to only 
        apply when there are substitutions to be made;
        bugfix: corrected syntax error in find OR statements
        Moved the upload zip file from process_snippets() to deploy(),
        added directory creation, as necessary.

0.19.7.3 (released on 2022-11-26)
       * Maintenance *
       [lib/general.sh]
        Added function pluralize to echo 's' if parameter not "1", nothing otherwise
       [makestaticsite.sh]
        conclude(): tidied up timer output, using pluralize()

0.19.7.2 (released on 2022-11-24)
       * Maintenance *
        Tidy up supp
       [makestaticsite.sh]
        initialise_variables(): grouped options relating to WP-CLI
       [lib/mod-wp.sh]
        wp_cli_check(): changed check on remote/local to use wp_cli_remote;
        wp_clean(): bug fix: printf for print

0.19.7.1 (released on 2022-11-22)
       * Maintenance *
       [makestaticsite.sh]
        wget_extra_options inserted as a parameter for every wget call 
        (to support directory-based basic http authentication)
        wget_mirror(): provided option to continue if no cookie match 
        (allows for the case cookie_session_string undefined in constants.sh);
        added runtime explanatory text.
       [lib/general.sh]
        confirm_continue(): moved checks for run_unattended here.

0.19.7 (released on 2022-11-21)
       * Maintenance and refinement *
        Made handling of web application sessions more robust
       [lib/constants.sh]
        New variables: cookie_session_string for the name of the login/session cookie
        and logout_path for web logout path
        Changed variable label: replaced wget_agent with wget_user_agent
       [makestaticsite.sh]
        wget_mirror(): changed login check to search for a login/session cookie,
        removed redundant initial login with bad credentials; added user agent as a 
        core option
        bug fix: wget_extra_urls(): substitute wget_plus_ops for
        wget_extra_options in exclude_dirs assignment
        clean_mirror(): added cookie expiration and logout path request.

0.19.6.1 (released on 2022-11-17)
       * Maintenance *
       [setup.sh]
        Bug fixes: read_option() and process_options(): introduced checks for
        whether variables set, mainly around use of ${BASH_REMATCH}, to 
        prevent being caught by error traps.
        init_mssconfig(): removed quotes from 'EOF' to allow parameter expansion

0.19.6 (released on 2022-11-16)
       * Maintenance and refinement *
        Extended support to URL paths, not just URL base.
        Capitalised general references to Wget, as opposed to the program, wget.
        Some refactoring.
       [lib/constants.sh]
        Replace constant url_base with url, which supports general URLs.
       [makestaticsite.sh]
        Read constant url, retaining/generating url_base (protocol + domain) 
        for various tests and searches.
        initialise_variables(): extended handling of -m option, with new
        variable, mirror_id_flag, to allow for re-runs right from the start
        wget_mirror(): only overwrite an existing mirror when certain flags are set 
        and consent given.
        wget_postprocessing(): cleaner URLs ensured with only single '/' generated 
        in conversion of remaining absolute paths to relative paths;
        extended conversion of absolute paths to relative paths to cover http(s).  

0.19.5.1 (released on 2022-11-11)
       * Maintenance *
       [makestaticsite.sh]
        Bug fix: initialise_variables(): handle the case when wget_extra_options
        does not have -R or --reject option defined

0.19.5 (released on 2022-11-11)
       * Maintenance and refinement *
       [lib/constants.sh]
        Added constant rename_wget_tmps (y/n) for removal of .tmp.html suffixes from 
        (wget temp) file names.
       [makestaticsite.sh]
        wget_mirror(): modified wget_test_option to use --spider rather than 
        --method=HEAD to support older versions of wget
        clean_mirror(): added routine (when rename_wget_tmps='y') to rename files  
        that end .tmp.html, removing such suffices.

0.19.4 (released on 2022-11-10)
       * Maintenance and refinement *
       [setup.sh]
        Bug fix: init_mssconfig(): removed bogus 'message' from Heredoc OR condition
       [lib/constants.sh]
        Added constant force_index_html (y/n) to set whether or not index.html
        should be appended to internal anchors ending with trailing slash
        as a directory for temporary files.  Default is no.
       [makestaticsite.sh]
        wget_postprocessing(): added routine (when force_index_html='y') to ensure 
        index.html added to internal anchors ending with trailing slash.
        wget input files, cookies and HTML Tidy error files now written to tmp/

0.19.3 (released on 2022-11-07)
       * Added support for application-restricted access (login required) *
       [lib/constants.sh]
        Added constant tmp_dir as a directory for temporary files
        allOptions(): Added fields require_login, site_user, site_password + associated 
        logic
        Added general constants: Added login_path, login_user_field, login_pwd_field for 
        specifying the login form's fields
        Added constant wget_reject_clause to avoid exit by wget hitting logout page
       [setup.sh]
        Bug fix: init_mssconfig(): added OR condition on reading from Heredoc
       [makestaticsite.sh]
        initialise_variables(): added logic to handle wget --reject clause
        wget_mirror(): added logic to handle wget logins, based on cookies. Once logged 
        in, wget will use these cookies to continue a crawl
        Bug fix: wget_extra_urls(): in the command substitution, webassets_all, 
        changed the directory for running grep from mirror_dir to working_mirror_dir
        Added 'return 0' to command substitutions to avoid errors on empty results.

0.19.2 (released on 2022-11-03)
       * Added support for sites restricted by basic http authentication + bug fix *
       [lib/validate.sh]
        validate_http(): inserted a trap for http response 401 (unauthorised), with 
        message warning of need to supply credentials for wget_extra_options
       [makestaticsite.sh]
        Replaced cURL test for connectivity with wget, with wget_extra_options 
        (assumed to contain credentials)
        Bug fix: wget_extra_urls(): in the command substitution, webassets_all, 
        changed the directory for running grep from mirror_dir to working_mirror_dir
        Added 'return 0' to command substitutions to avoid errors on empty results.

0.19.1 (released on 2022-10-28)
       * Maintenance, time zones and logging *
       New project home at https://makestaticsite.sh/ - references updated
       Added time zone options local / UTC.
       Added logging at several levels (in parallel with terminal output)
       A little more refactoring, with overhaul of output through echo command
       [lib/constants.sh]
        New variable, timezone, which can take one of three values: local;  
        utc (UTC, not local); and utllocal, standard local time as UTC.
        Moved output_level from .cfg file to the runtime variables section
        Added log_level and log_filename runtime variables to support logging
       [lib/general.sh]
        echo(): Standardised echo statements, replacing previous echo0() and echo1();
        added support for writing to a log file;
        introduced use of env echo to ensure compatibility
       [setup.sh]
        Refactored to group initial setup stages
        Timestamp of config file set according to timezone setting
       [makestaticsite.sh]
        Timestamp of mirror archive directory set according to timezone setting
        main(): Swapped order of read_config() and initialise_layout() 
        to support full logging; inserted logging logic
        Prefixed all occurrences of echo used in internal logic with 'env'
        Replaced all occurrences of echo0 and echo1 with echo + parameter
        Bug fix: Replaced occurrences of webassets_exclude_dirs with webassets_omissions

0.19 (released on 2022-10-14)
     * Refactoring with more command line options *
     [lib/constants.sh]
      Added all_phases array to define an initial nine phases
      set force_ssl=no rather than =yes
      new variable wp_permalinks_postname=yes ('no' to not enforce)
     [makestaticsite.sh]
      Replaced references to 'steps' with more granular phases
      read_config(): Introduced -p and -q command line options to run between given 
      phases supported by -m option for the mirror ID (directory); expanded help
      Moved folder definitions from prepare_static_generation() to new process
      initialise_layout().
      initialise_variables(): added validation for phases (start and end)
      Moved zip file creation to new create_zip() function
      sed command options changed from strings to arrays
      Bug fix: for defining rsync options, replaced $src and $dest strings with arrays
      Some general tidying
     [README.md]
      Some elaboration on requirements, command line options and functionality


0.18.5 (released on 2022-10-05)
       * Maintenance *
       [lib/constants.sh]
        Added force_ssl (yes/no) variable for https enforcement    
       [makestaticsite.sh]
        Bug fix: relaxed draconian enforcement of https for all anchors with
        optional https for anchors to the deployment domain only
        Relaxed response to wget error code 3 (no longer aborts), added indication 
        of possible reason being due to directory - filename clash

0.18.4 (released on 2022-10-03)
       * Maintenance and refinement *
       Error reporting refinements, partly to prevent premature program termination
       Bug fix: for defining wget and rsync options, replaced strings with arrays
       to remedy a few runtime errors
       [lib/constants.sh]
        Added yes/no variable trap_errors for trap and set -euf commands
        wget options and wget_extra_core_options: changed from strings to arrays
       [makestaticsite.sh]
        Bug fix: for wget and rsync options, replaced string with array

0.18.3 (released on 2022-09-28)
       * Refinement *
       [lib/constants.sh]
        Added yes/no switch variable wp_permalinks_postname
       [mod_wp.sh]
        Any change to permalinks now dependent on wp_permalinks_postname=yes;
        relaxed constraint on using %postname% to be a substring.

0.18.2 (released on 2022-09-23)
       * Maintenance and refinement *
       [lib/constants.sh]
        Added variable run_unattended - set 'yes' to allow default responses at prompts
       [makestaticsite.sh]
        For run_unattended, assume continuation on wget errors and assume new domain
        Bug fix: exclude feeds from having URLs made relative

0.18.1 (released on 2022-09-15)
       * Maintenance and refinement *
       (License) Added notices of URL where software may be downloaded.
       [setup.sh]
        Expanded the welcome text to elaborate on the process and add download URL options
       [makestaticsite.sh]
        In the case that deploy=no, but deploydomain and domain (from url_base) 
        are not equal, added runtime choice of whether to do global search & replace

0.18 (released on 2022-09-14)
      * Setup refinements and first licensed release - AGPL version 3 *
      Added Copyright file for license, inserted license headers in source files  
      and added a mention in README.md
      Reversed chronology for version_history.txt and started adding release dates
     [setup.sh]
      Tweaked input to remove extraneous space (input_text="-i$opt_default"), 
      plus other cosmetic changes to improve readability of user interface
     [lib/constants.sh]
      Added MakeStaticSite version info as variables
      Added fuller info for a few options settings
      Added new validation array, options_check_yesno()
     [lib/validate.sh]
      validate_input() bug fix: trapped case where suggested input, $1, is empty
      new function validate_yesno() to ensure correctness of yes/no switches
     [makestaticsite.sh]
      read_config() input: added version and help, script termination on invalid input
      deploy_domain set conditional on value of variable $deploy.
      bug fix for webassets_exclude_dirs array when wget_extra_options empty
     [config/sample.cfg]
      Generated this afresh, with more options selected

0.17.1 Maintenance and refinement
       [lib/validate.sh]
        validate_input(): fixed bugs in array checks from streamlined version 0.15
       [lib/constants.sh]
        Moved HTML Tidy and additions options into allOptions array
       [setup.sh]
        Added options for HTML Tidy and file additional files
       [makestaticsite.sh]
        Renamed cmd_htmltidy to htmltidy_cmd to standardise, plus other minor changes

0.17 Extensions to tidy up HTML output and augment the static mirror
     [makestaticsite.sh]
      clean_mirror(): Added support for tidying up HTML output, using HTML Tidy
      Added immediately before deployment a new function, add_extras(), 
      which allows the addition per domain of further files from a designated 
      folder
     [lib/constants.sh]
      Added new runtime options to support HTML Tidy and additions to static mirror

0.16.5 Maintenance and refinement
       [makestaticsite.sh]
        wget_extra_urls(): Additional filtering of wget input URLs 
        (must start with 'http') for wget second run
        wget_postprocessing(): Inserted environment language settings, 
        LC_CTYPE=C && LANG=C, to prevent (Mac) sed: RE error: illegal byte sequence

0.16.4 Maintenance and refinement - mainly README.md update and streamlined wget options
       [lib/constants.sh]
        Moved wget_inputs_main and wget_inputs_extra from makestaticsite.sh
        Added two variables, wget_core_options and wget_extra_core_options, to store 
        basic options for wget in the respective phases.
        Removed limit_rate variable, which can be set by user in wget_extra_options
       [makestaticsite.sh]
        Updated to support wget options variables
        Updated wget_input_files initialisation to be empty instead of (), which 
        was leading to unbound variable error in Bash3
        Renamed wget_inputs_collated wget_inputs_main to distinguish from phase2
        wget_inputs_extra

0.16.3 Refinement - additional filtering to remove newsfeeds from second wget run
       [makestaticsite.sh]
        In wget_extra_urls(), extended scope of webassets_nohtml to include 
        RSS and Atom feeds (they don't generate any new assets and have been found  
        in some situations to prevent the script from completing its run)

0.16.2 Refinement - removed exclude_dirs as a separate variable (leave it for
       wget_extra_options
       [lib/general.sh]
        Added wget_canonical_options() function to return canonical option parameters
       [makestaticsite.sh]
        Further tweaks to maintain same behaviour as before for exclusion of directories

0.16.1 Maintenance
       [makestaticsite.sh]
        Added another routine to wget_extra_urls() to duly removes any URL that 
        matches wget exclude_directories directive.
        Fixed bug: removed the possibility of an empty -X option for wget
        Some tidying up of runtime stdout.

0.16 Code refactoring with initial support for CMS client modules (currently only WP)
     [lib/mod_wp.sh]
      New library module for WordPress-specific functions and settings.
     [makestaticsite.sh]
      Replaced WordPress-specific functions with mod_wp.sh library include plus 
      generic references

0.15.5 Further post-wget processing refinements
       [makestaticsite.sh]
        wget_post_processing() tries to ensure that links to domain URLs 
        under http: and https: are both converted to relative links
        Extended clean_mirror() to ensure externally linked elements have 
        https: prefix where url_base has https as protocol

0.15.4 Bug fix and mirror clean
       [makestaticsite.sh]
        Bug fix for clean_mirror() - apply changes in relevant directory (not mirror/)
        Added facility to update references in web pages to support RSS auto-discover
       [lib/constants.sh]
        Added a couple of variables to support clean_mirror()

0.15.3 Maintenance and mirror clean
       [makestaticsite.sh]
        Augmented clean_mirror() with a routine to replace any stray occurrences to 
        (local) domain name with the one in deployment.
        Added a facility to retain support for RSS newsfeeds, aimed at WordPress sites.
       [README.md]
        Added subsection on supporting newsfeeds

0.15.2 Bug fix
       Fixed misspelt variable label and references (from WP-cli to wp_cli)

0.15.1 Maintenance and consolidation
       Simplified snippets switch - merged two options into one, use_snippets
       [makestaticsite.sh]
        Fixed bugs introduced in 0.15 around snippets replacement (-r flag) and 
        toggle_flag undefined for sites deployed locally
        Refactored Step 0 into three functions, invoked from main()

0.15 Support for runtime domain entry enabling/disabling in hosts file.
     Some streamlining of code
     [makestaticsite.sh]
      Added check on source and deployment domains, link to host comment routine
     [general.sh]
      New function, comment_uncomment(), to (un)comment lines in a given file; 
      and hosts_toggle() to inspect hosts file for line containing domain, invoking 
      comment_uncomment(), as needed
     [validate.sh]
      Streamlined validation functions

0.14.4 Further maintenance and bug fixes for cross-platform compatibility
       [makestaticsite.sh]
        Fixed bugs to ensure snippets applied (filename case and 
        snippets.data tag handling)
        Reading config file made more robust for yes/no options

0.14.3 Further maintenance and bug fix
       [makestaticsite.sh]
        Fixed 'empty file' issue with sed -i that prevented allow post wget-processing
        for non-Mac systems
        Streamlined string comparisons (replacing '==' with '=')

0.14.2 Bug fixes and minor changes in descriptive text
       [setup.sh]
        Fixed bugs introduced in 0.13 from process of making variable names lowercase: 
        completed the conversion to lowercase, whilst preserving capitalisation of 
        environment variables.

0.14.1 Snippets, name and documentation
       Consolidated name of software as MakeStaticSite (MSS for short)
       Expanded README.md with sections on options and snippets
       [makestaticsite.sh]
        Generalised snippets to support multiple sites
        Added 'set' command with -eof options to improve script safety 
        plus a few tweaks for robustness

0.14 Documentation and maintenance.
     Added README.md with basic information about and on how to use the tool
     Global conversion of variable names to lowercase
     [makestaticsite.sh]
       Fixed bug introduced in 0.13 that mean wget_extra_urls() was not retrieving URLs
       added --page-requisites flag for wget

0.13.1 Maintenance: tidy up, assisted by shellcheck
       [makestaticsite.sh]
        Added double quotes to prevent word splitting in variables
        Fixed bug introduced in 0.13 re failed case for 'cd' command in wget_extra_urls()

0.13 [lib/constants.sh]
       New file to store presets, including allOptions() runtime options array.
       Introduced OUTPUT_LEVEL constant for stdout with four levels of verbosity
     [lib/general.sh]
       New library for general functions.  The first pair are echo statements conditional
       on OUTPUT_LEVEL constant
     [lib/config.sh]
       Modified config_get() to assign runtime defaults where not specified in .cfg file
     [makestaticsite.sh]
       Removal of default assignments, as now carried out by config.sh
       Setting OUTPUT_LEVEL to 'silent' or 'quiet' will suppress all but essential output 
       for the script and utilities such as wget

0.12.1 [setup.sh]
       Minor tweaks to defaults (example URLs)
       [makestaticsite.sh]
         Added a timer for how long the script takes to complete its work
         Added clean_mirror() routine to tidy up (little more than a placeholder)
         Added HTML files filter in wget_extra_urls()
         Ensured that mirror directory is refreshed before storing files.
         When reading snippets.data file, ignore lines starting with '<'

0.12 [setup.sh]
       Added two options: WGET_EXTRA_URLS (retrieve additional URLs y/n?) and 
       WGET_POST_PROCESSING (convert absolute URLs to relative URLs y/n?)
       Some tweaks to the descriptions of options
     [makestaticsite.sh]
       Added function wget_extra_urls() to generate a list of remaining absolute URLs 
       involving source donain and then retrieve then (with wget).
       Added function wget_postprocessing() to convert absolute URLs 
       involving source donain to relative URLs.
     [config/sample.cfg]
       Overhauled to make consistent with current setup.sh

0.11.1 [makestaticsite.sh and setup.sh]
       Replaced SOURCE_WWW_ROOT and SOURCE_WP_DIR (two variables) by SITE_PATH
       [makestaticsite.sh]
         Added --insecure config option for curl, needed for testing local sites with      
         self-signed certificates.
         Added $URL_BASE/search/ to extra pages to be indexed as 
         it might not be linked from anywhere
       [lib/validate.sh]
         Added check for directory existence - for SITE_PATH, not yet DEPLOY_PATH

0.11 Debugged to make the system usable for non-WP sites.
     [makestaticsite.sh]
       Added checks for wget and rsync commands
       Added rate limiting as standard option for wget
     [setup.sh]
       Added support for more checks
       Expanded some option descriptions
       Removed hard-coded URL for search plugin (moved to makestaticsite.sh)

0.10.3 Added library validate.sh for system and user input checks.
       Moved to UTC for timestamps
       Start with check for bash version.
       Tidied up comments - removed ad hoc remarks such as 'to do' (moved to docs)
       [makestaticsite.sh]
         Moved config check into config.sh library
         Added notice about creating search index manually
       [setup.sh]
         Changed shebang line to use session:
         #!/usr/bin/env bash
         User input tidy for Bash 3 - don't give 'e.g.' hints for Y/N or empty fields

0.10.2 Extended snippets with additional option to include them in a deployed site, 
       not just for a zip file

0.10.1 Added support for two wget modes: (timestamped archives) or straight download 
       to same directory, being the site name

0.10 Added setup.sh, an interactive script to generate config files
     Some tidying of options, added support to specify input URLs file for wget

0.9 Added support for multiple configs, which are invoked depending on 
    command line option -i (= input).  Hence, defined another variable 
    for snippets (to determine data file and where snippets are stored); 
    extended use of input files (renamed from includes)

0.8 Configuration options stored in and loaded from separate files - 
    config.cfg.defaults stores defaults, config.cfg stores custom settings

0.7.1 Code tidy (various) with ShellCheck, including replacement of backticks 
      with POSIX $(command) syntax.

0.7 Extended WP-CLI to work remotely over ssh with generalization of the WP commands 
    supported by a new set of variables for source (server) details.
    A bit of code tidy - mainly ensuring variables are quoted in conditionals.

0.6 Added WP-CLI functions to prepare WP site for crawling by wget
    with additional simplification config (via perform plugin).
    Also installed (optional) search - everything bar the creation of the Lunr index.

0.5.2 Introduced variable $ZIP_FILENAME to replace hard-coded value. 
      Extended error reporting for wget (explanations for each error code).

0.5.1 Snippet modifications now carried out on mirror/ folder 
      and this folder is used for rsync instead of local deployment, which is now
      fully separated.

0.5 Refactored to use functions and added 'yes'/'no' flags for: zip archival creation,
    local deployment, remote deployment.

0.4 Refactored to run each step in own folder.

0.3.1 Documentation: added section numbering, usage comments for rsync.

0.3 Added support for snippet substitutions using:  
    snippets.data - index to files to modify followed by list of snippet IDs
    snippetNNN.html - snippet ID=NNN
    Modify only these files to provide variants in .zip download (for offline use).

0.2

0.1

0.0.1 Initial version

